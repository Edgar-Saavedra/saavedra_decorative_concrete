%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.0%%For: (Bonnie L. Down) ()%%Title: (yelp\650.eps)%%CreationDate: 5/29/10 10:31 AM%%BoundingBox: 209 349 407 446%%HiResBoundingBox: 209.3457 349.2041 406.1387 445.8184%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: -72 108 662 684%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 216 108%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 133.7485 522.3179 4.267 1825 1119 26 0 0 6 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:162 -404%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp2 Bn%AI5_BeginGradient: (Linear Gradient 1)(Linear Gradient 1) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 1)(Radial Gradient 1) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[1 0 50 0 %_BS%_1 0 50 0 Bs0 0 50 100 %_BS%_0 0 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 2)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4012.2314 4714.3438 m-3903.6592 4714.3438 L-3903.6592 4712.9312 L-4012.2314 4712.9312 L-4012.2314 4714.3438 Lnu0 O0 0 0 1 k-3903.6592 4712.9688 m-3903.7109 4712.9312 L-3903.8438 4713.0352 L-3903.6592 4712.9688 Lf-3904.5342 4713.1992 m-3904.5083 4713.2188 -3904.5205 4713.25 -3904.4946 4713.2695 C-3903.9814 4712.9727 L-3904.2109 4712.8047 -3904.3828 4713.312 -3904.5342 4713.1992 cf-3904.6855 4713.1699 m-3904.8843 4713.1006 -3904.9668 4713.2393 -3905.0132 4713.2871 C-3904.9434 4713.1792 -3904.6416 4713.3203 -3904.6855 4713.1699 Cf-3922.2212 4713.2393 m-3922.2026 4713.2383 -3922.1782 4713.2344 -3922.1592 4713.2305 C-3922.1904 4713.2256 -3922.2109 4713.2305 -3922.2212 4713.2393 Cf-3926.7964 4713.7119 m-3926.8442 4713.8228 L-3925.9907 4713.625 -3925.0273 4713.8262 -3924.1252 4713.7393 C-3924.1855 4713.7793 L-3921.8945 4713.8223 -3919.7822 4713.6367 -3917.5088 4713.5518 C-3917.5444 4713.5645 -3917.5566 4713.5967 -3917.5933 4713.6094 c-3917.4834 4713.5713 -3917.3618 4713.5 -3917.2388 4713.5088 C-3917.2073 4713.5342 -3917.2734 4713.5615 -3917.3125 4713.5723 C-3916.8333 4713.7559 -3915.9028 4713.4561 -3915.6025 4713.5977 C-3915.4678 4713.5771 -3915.4082 4713.5015 -3915.4834 4713.4424 C-3913.7041 4713.396 -3911.8013 4713.3604 -3909.9893 4713.2168 C-3909.9019 4713.2422 -3909.8862 4713.292 -3909.9102 4713.3555 C-3908.3613 4713.0576 -3906.7378 4713.1763 -3905.1533 4713.2246 C-3905.0923 4713.1465 -3905.3145 4713.1416 -3905.1587 4713.0596 C-3905.6682 4712.9624 -3906.0918 4713.2524 -3906.5537 4713.1094 C-3906.4946 4713.0342 L-3906.8311 4712.9863 -3906.5625 4713.2246 -3906.9116 4713.127 C-3907.0488 4713.0645 -3906.8772 4713.0313 -3906.9414 4713.0254 C-3907.6558 4713.0566 -3908.4014 4712.9883 -3909.0742 4713.1719 C-3909.2402 4713.0078 -3909.8418 4713.166 -3910.1062 4713.0088 C-3910.2913 4713.0742 -3910.4766 4713.0576 -3910.5469 4713.166 C-3913.0479 4713.0801 -3915.6025 4713.2383 -3918.1653 4713.2256 C-3919.3638 4713.5439 -3920.7998 4713.165 -3922.2227 4713.2715 C-3922.2324 4713.2607 -3922.2305 4713.248 -3922.2212 4713.2393 C-3922.6855 4713.3174 -3923.3613 4713.3545 -3923.9153 4713.3145 C-3924.3838 4713.4492 L-3927.7158 4713.1729 -3931.1201 4713.3672 -3934.5044 4713.2524 c-3938.3496 4713.1729 -3941.7188 4712.9448 -3945.4639 4713.3633 C-3945.4592 4713.3315 -3945.4893 4713.3145 -3945.3926 4713.3027 C-3946.4731 4713.3662 -3947.4583 4713.2524 -3948.4756 4713.3184 C-3948.4727 4713.2871 L-3950.9983 4713.5483 -3953.7292 4713.2524 -3956.1636 4713.5342 C-3959.1274 4713.5059 -3962.4785 4713.5342 -3965.6157 4713.6147 C-3965.6084 4713.5518 L-3968.1187 4713.6846 -3970.5444 4713.3516 -3973.0488 4713.4512 C-3975.6252 4713.3086 -3978.3457 4713.812 -3980.9434 4713.6211 C-3982.5508 4713.312 -3984.6621 4713.9731 -3986.1719 4713.6543 C-3989.2734 4713.1719 -3992.2822 4713.4824 -3995.3828 4713.7715 C-3998.2432 4713.5996 -4001.0996 4714.041 -4003.8701 4713.6899 C-4005.1826 4713.915 -4006.6323 4713.4121 -4008.0933 4713.4766 C-4008.0413 4713.5547 L-4008.5654 4713.3184 -4009.2092 4713.8848 -4009.5361 4713.5342 C-4009.4814 4713.5176 L-4009.7588 4713.3398 -4010.1262 4713.9385 -4010.2949 4713.7256 C-4010.3398 4713.8145 L-4010.6758 4713.8398 -4010.3794 4713.7144 -4010.6387 4713.6792 C-4010.7363 4713.6899 -4010.6758 4713.8398 -4010.8794 4713.7891 C-4010.9238 4713.4287 -4011.7026 4713.8672 -4011.7256 4713.4624 C-4011.5422 4713.4624 -4012.0137 4713.3057 -4011.6011 4713.2207 C-4011.7188 4713.1792 -4012.2822 4713.1992 -4012.2314 4713.3711 C-4012.2793 4713.5537 -4012.4995 4713.7129 -4012.1572 4713.8535 C-4012.0884 4713.7207 L-4011.9731 4713.8535 -4012.0012 4713.7871 -4011.9595 4713.8867 C-4011.5122 4713.9043 -4011.4521 4714.0977 -4011.1318 4714.1768 C-4011.1348 4714.1729 -4011.1377 4714.1699 -4011.1333 4714.1631 C-4010.9141 4714.0039 -4010.6104 4714.0977 -4010.4375 4714.1211 C-4010.3672 4714.1953 L-4010.2617 4714.3496 -4009.8584 4713.8926 -4009.9946 4714.1582 C-4009.0852 4714.0923 -4008.0432 4714.0952 -4007.0264 4714.0923 C-4006.8843 4713.9912 -4006.2493 4714.1016 -4006.4707 4713.9072 c-4006.2163 4714.1289 -4005.46 4714.1846 -4005.1797 4714.1763 C-4005.1899 4714.1968 -4005.2021 4714.2207 -4005.2461 4714.2129 C-4004.7012 4714.5 -4004.6006 4713.9463 -4004.0898 4714.2983 C-4004.0103 4714.0483 -4003.1626 4714.3774 -4002.8743 4714.0854 C-4002.8105 4714.1406 -4002.7898 4714.1899 -4002.8125 4714.2344 C-4001.8936 4714.2393 -4000.8789 4714.3296 -4000.1011 4714.3408 C-3999.4365 4714.1235 -3998.4922 4714.4395 -3997.9209 4714.1387 C-3997.4478 4714.2031 -3996.6816 4714.3271 -3996.0215 4714.207 C-3996.0852 4714.2432 L-3995.3398 4714.2256 -3994.4082 4714.21 -3993.8965 4714.0215 C-3993.6763 4714.3096 -3993.3545 4714.2524 -3993.0317 4714.3438 C-3992.5342 4714.21 -3991.5293 4714.25 -3990.7695 4714.1289 C-3990.6533 4714.2617 -3990.1426 4714.0723 -3990.1035 4714.2656 C-3987.9756 4713.8926 -3985.3442 4714.0225 -3983.0718 4714.3047 C-3983.1045 4714.3184 L-3982.8096 4714.2129 -3982.4697 4713.9785 -3982.1699 4713.8408 C-3982.1406 4713.8584 -3982.1436 4713.8896 -3982.2073 4713.8896 C-3981.7922 4713.8535 -3981.4033 4714.0435 -3980.9893 4714.0078 C-3980.9922 4714.0396 -3980.9922 4714.0396 -3981.0596 4714.0703 C-3980.6709 4713.9844 -3980.2559 4714.2246 -3979.7964 4714.0752 C-3979.7712 4714.1265 L-3979.4785 4714.0547 L-3979.4858 4714.1182 -3979.4971 4714.2144 -3979.6533 4714.1934 C-3976.0898 4714.2559 -3972.4116 4713.9248 -3968.7529 4713.9727 C-3968.8877 4714.0332 L-3968.1782 4713.9248 L-3968.1816 4713.957 -3968.2158 4713.9727 -3968.2495 4713.9873 C-3967.3457 4714.0952 -3966.4082 4713.915 -3965.5273 4713.9424 C-3965.5317 4713.9731 -3965.6653 4714.0352 -3965.5422 4714.0703 C-3964.8896 4713.896 -3964.4946 4714.2969 -3964.1682 4713.9355 C-3964.1377 4713.9512 -3964.1172 4714.0332 -3964.1836 4714.0625 C-3962.3701 4713.9424 -3960.5078 4713.9492 -3958.6807 4714.0078 C-3957.1587 4713.6807 -3955.4583 4713.9766 -3953.8772 4713.7168 C-3953.8853 4713.7822 L-3951.8389 4713.5537 -3949.6682 4713.7983 -3947.5469 4713.7524 C-3946.6663 4713.7783 -3946.0708 4713.7012 -3945.1855 4713.6968 C-3945.1636 4713.7783 L-3943.6738 4713.4688 -3942.0322 4714.0566 -3940.4785 4713.7158 C-3940.5852 4713.8262 L-3940.3442 4713.6553 -3939.6455 4713.8867 -3939.7373 4713.5928 C-3939.4629 4713.6812 L-3938.4067 4713.2944 -3937.5413 4713.8604 -3936.2471 4713.6094 C-3936.3323 4713.6792 L-3935.9878 4713.625 -3935.5869 4713.5815 -3935.3323 4713.6465 C-3935.3716 4713.6563 -3935.3535 4713.6768 -3935.4346 4713.6953 C-3934.3574 4713.9707 -3933.1582 4713.666 -3932.0215 4713.6768 C-3932.1499 4713.8062 L-3931.6006 4713.6543 -3930.5923 4713.7959 -3929.8701 4713.7256 C-3929.9141 4713.7871 L-3929.5483 4713.7012 L-3929.5391 4713.8228 L-3928.5986 4713.8315 -3927.7139 4713.7256 -3926.7964 4713.7119 Cf-3917.3125 4713.5723 m-3917.3154 4713.5713 -3917.3193 4713.5713 -3917.3228 4713.5684 C-3917.3506 4713.5791 -3917.3369 4713.5771 -3917.3125 4713.5723 Cf-4011.0166 4714.2031 m-4011.0596 4714.1953 -4011.0957 4714.1875 -4011.1318 4714.1768 C-4011.1233 4714.2031 -4011.0532 4714.1968 -4011.0166 4714.2031 cfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885 8584.3066 m-7689.0332 8584.3066 L-7689.0332 8524.2773 L-7885 8524.2773 L-7885 8584.3066 Lnu0 O0.05 0.7 0.9 0 k-7864.96 8577.6826 m-7876.9639 8572.877 -7882.4199 8576.4893 v-7877.6582 8576.332 -7873.4912 8578.1455 v-7882.6182 8578.5146 -7885 8583.627 v-7882.0234 8580.7295 -7875.0781 8582.0342 v-7868.1357 8583.3389 -7851.6685 8587 -7856.8252 8581.4033 C-7860.0791 8580.0742 -7861.7061 8579.3457 -7864.96 8577.6826 Cf0.055556 0.84 1 0.17 k-7855.9961 8582.5361 m-7858.1016 8580.832 -7868.7441 8579.9785 -7867.4082 8576.04 c-7866.0723 8572.1025 -7863.4971 8570.5674 Y-7861.6094 8570.5576 -7860.6665 8570.5313 -7858.7773 8570.4258 C-7856.7656 8579.9189 -7855.9961 8582.5361 Vf0.05 0.7 0.9 0 k-7863.6641 8563.8223 m-7865.1621 8570.3965 -7865.9102 8571.6289 -7867.4082 8576.04 C-7865.4229 8570.7246 -7858.9844 8573.9238 v-7852.1191 8577.334 -7830.1914 8573.5215 -7844.6309 8563.7754 C-7852.2441 8564.5049 -7856.0508 8564.6289 -7863.6641 8563.8223 Cf0.055556 0.84 1 0.17 k-7867.9395 8545.5518 m-7865.7524 8546.7129 -7867.9355 8550.4229 v-7874.7813 8562.0479 -7873.6582 8568.9824 -7866.4814 8567.7471 c-7859.3047 8566.5117 -7844.1719 8563.25 -7840.8955 8567.0557 C-7842.9912 8558.4805 -7845.0435 8553.7432 -7847.1387 8543.8789 C-7864.4814 8538.1953 -7867.9395 8545.5518 vf0.05 0.7 0.9 0 k-7709.0723 8571.8945 m-7697.0664 8571.8545 -7691.6094 8577.168 v-7696.3701 8574.9375 -7700.5381 8575.4902 v-7691.4121 8579.4326 -7689.0332 8583.9932 v-7692.0059 8580.6914 -7698.9512 8580.374 v-7705.8965 8580.0566 -7722.3652 8582.2891 -7717.2061 8574.9307 C-7713.9531 8573.6074 -7712.3252 8572.9893 -7709.0723 8571.8945 Cf0.055556 0.84 1 0.17 k-7718.0332 8576.502 m-7715.9307 8574.2559 -7705.2852 8576.1045 -7706.6221 8570.6709 c-7707.9595 8565.2373 -7710.5313 8562.2891 Y-7712.6274 8561.2666 -7713.6758 8560.7637 -7715.7715 8559.79 C-7717.2666 8572.5918 -7718.0332 8576.502 Vf0.05 0.7 0.9 0 k-7710.3633 8555.5 m-7708.8662 8561.5098 -7708.1191 8564.585 -7706.6221 8570.6709 C-7708.6523 8562.7314 -7715.0449 8564.9609 v-7724.6563 8568.3135 -7742.0996 8560.2891 -7729.3984 8551.8398 C-7721.7852 8552.7402 -7717.9766 8553.4609 -7710.3633 8555.5 Cf0.055556 0.84 1 0.17 k-7706.0938 8544.4844 m-7708.0264 8544.1357 -7706.0957 8547.2529 v-7699.3496 8558.1426 -7702.9688 8563.667 -7710.1445 8558.7422 c-7717.3203 8553.8154 -7730.2949 8553.0723 -7733.5713 8556.3662 C-7731.1289 8548.4092 -7729.3359 8544.8945 -7726.8926 8540.1504 C-7709.5527 8539.3164 -7706.0938 8544.4844 vfu0.05 0.7 0.9 0 k-7721.4277 8545.6777 m-7735.8345 8546.3369 -7750.0845 8550.7295 -7763.8652 8554.9766 c-7779.4668 8559.7842 -7794.2051 8564.3262 -7809.1953 8563.9697 c-7814.2734 8563.8496 -7823.0762 8561.8438 -7832.3955 8559.7197 c-7849.1255 8555.9063 -7861.4551 8553.4072 -7868.5449 8554.8008 C-7869.6865 8554.9434 -7871.4863 8555.4102 V-7871.7852 8558.5225 -7872.2598 8560.5469 Y-7868.8242 8550.6113 -7824.5723 8566.4863 -7809.2637 8566.8496 c-7779.9629 8567.5449 -7751.0166 8549.917 -7721.2959 8548.5537 c-7704.2471 8547.7734 -7702.2988 8557.0625 Y-7702.8262 8554.4072 -7703.4404 8550.877 V-7705.3857 8549.167 -7706.8164 8548.1758 Y-7710.0762 8546.5244 -7714.7383 8545.3711 -7721.4277 8545.6777 cf-7852.8848 8527.3857 m-7839.8828 8528.6729 -7826.5156 8531.8896 -7819.6255 8535.3887 c-7802.3325 8544.1729 -7783.5723 8541.583 -7767.5039 8537.8906 C-7764.3438 8537.1602 L-7749.0684 8533.6074 -7718.6387 8526.5322 -7706.6074 8532.1514 C-7705.5615 8532.4521 -7703.9824 8533.4941 V-7702.5977 8532.3037 -7700.7383 8532.9473 -7701.8906 8531.8584 c-7712.8496 8521.4873 -7751.0234 8531.1514 -7768.1484 8535.085 c-7784.8721 8538.9258 -7802.4111 8540.9023 -7818.3213 8532.8213 c-7833.3535 8525.1865 -7874.4902 8519.9229 -7878.9609 8528.0117 c-7879.2578 8528.5488 -7878.5547 8528.6475 -7877.4473 8529.6074 C-7875.9785 8528.7324 -7874.71 8528.2754 Y-7871.6895 8527.0869 -7864.7485 8526.2119 -7852.8848 8527.3857 cf0.02 0.28 0.72 0 k-7703.9824 8533.4941 m-7705.5615 8532.4521 -7706.6074 8532.1514 Y-7718.6387 8526.5322 -7749.0684 8533.6074 -7764.3438 8537.1602 C-7767.5039 8537.8906 L-7783.5723 8541.583 -7802.3325 8544.1729 -7819.6255 8535.3887 c-7826.5156 8531.8896 -7839.8828 8528.6729 -7852.8848 8527.3857 c-7864.7485 8526.2119 -7871.6895 8527.0869 -7874.71 8528.2754 C-7875.9785 8528.7324 -7877.4473 8529.6074 V-7875.8018 8531.0322 -7873.2598 8534.3594 -7871.7524 8543.8594 c-7871.0684 8548.1738 -7871.1904 8552.3262 -7871.4863 8555.4102 C-7869.6865 8554.9434 -7868.5449 8554.8008 Y-7861.4551 8553.4072 -7849.1255 8555.9063 -7832.3955 8559.7197 c-7823.0762 8561.8438 -7814.2734 8563.8496 -7809.1953 8563.9697 c-7794.2051 8564.3262 -7779.4668 8559.7842 -7763.8652 8554.9766 c-7750.0845 8550.7295 -7735.8345 8546.3369 -7721.4277 8545.6777 c-7714.7383 8545.3711 -7710.0762 8546.5244 -7706.8164 8548.1758 C-7705.3857 8549.167 -7703.4404 8550.877 V-7704.1328 8546.8984 -7704.9385 8541.8086 -7705.2256 8538.1563 c-7705.4346 8535.5049 -7704.7891 8534.1885 -7703.9824 8533.4941 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885 8587 m-7859.1089 8587 L-7859.1089 8561.1602 L-7885 8561.1602 L-7885 8587 Ln*u0 O0.62 0.04 0.93 0 k-7859.4077 8565.3809 m-7859.2969 8565.2969 -7859.1973 8565.2061 -7859.1089 8565.1084 C-7859.1089 8562.3887 L-7859.7085 8561.6465 -7860.7285 8561.1602 -7861.5703 8561.1602 c-7862.1948 8561.1602 -7862.8989 8561.5254 -7863.1328 8561.8135 C-7863.2632 8561.9424 -7863.4199 8561.9941 -7863.5752 8561.9941 c-7863.7329 8561.9941 -7863.8613 8561.9424 -7863.9141 8561.8369 c-7864.0957 8561.4473 -7864.4351 8561.1865 -7864.9048 8561.1865 c-7865.6592 8561.1865 -7868.5239 8563.8682 -7868.5239 8564.625 c-7868.5239 8564.7549 -7868.4199 8564.8076 -7868.2373 8564.8076 c-7868.0029 8564.8076 -7867.6128 8564.7031 -7867.2476 8564.5215 C-7867.0132 8564.418 -7865.9199 8563.6094 -7865.6328 8563.6094 c-7865.2949 8563.6094 -7865.0605 8564.418 -7864.7207 8564.418 c-7864.4351 8564.418 -7863.3408 8563.4277 -7863.0796 8563.2441 c-7862.8452 8563.0879 -7862.0908 8562.334 -7861.4399 8562.334 c-7860.5288 8562.334 -7859.6157 8562.8262 -7859.6157 8563.8174 c-7859.6157 8564.3389 -7860.4238 8565.875 -7863.2632 8566.3701 c-7863.5239 8566.4209 -7864.8765 8566.3975 -7865.1895 8566.4209 c-7865.5029 8566.4473 -7867.0391 8565.9785 -7867.3789 8565.9014 c-7868.4199 8565.667 -7868.4985 8565.667 -7870.4512 8565.667 c-7870.5825 8565.667 -7870.6606 8565.667 -7870.6606 8565.5879 c-7870.6606 8565.5361 -7870.6333 8565.458 -7870.5557 8565.3535 C-7870.2949 8564.9639 -7870.0605 8564.4434 -7870.0605 8563.8438 c-7870.0605 8562.5146 -7871.4155 8561.1602 -7872.9263 8561.1602 c-7875.8428 8561.1602 -7875.8428 8562.8799 -7875.8428 8563.1143 c-7875.8428 8563.6621 -7875.5039 8564.7813 -7874.2549 8564.7813 c-7873.5508 8564.7813 -7873.2637 8564.4434 -7873.2637 8564.1309 c-7873.2637 8563.8965 -7873.3945 8563.7129 -7873.5771 8563.6348 c-7873.8389 8563.5313 -7873.9419 8563.3994 -7873.9419 8563.2705 c-7873.9419 8563.0098 -7873.5771 8562.7754 -7873.1343 8562.7754 c-7872.3262 8562.7754 -7871.5708 8563.5566 -7871.5708 8564.209 c-7871.5708 8566.293 -7875.9209 8566.8926 -7876.1548 8566.8906 c-7878.0254 8566.8799 -7879.2549 8567.9229 -7879.2168 8569.9521 c-7879.1938 8571.3066 -7880.3892 8574.8496 -7882.2646 8574.8496 c-7882.8389 8574.8496 -7883.2813 8574.5117 -7883.2813 8573.8076 c-7883.2813 8573.1563 -7883.0991 8572.7129 -7882.8892 8572.7129 c-7882.7861 8572.7129 -7882.6548 8572.8701 -7882.5254 8573.1563 C-7882.4727 8573.3135 -7882.2915 8573.418 -7882.0825 8573.418 c-7881.6133 8573.418 -7881.0151 8573.002 -7881.0151 8571.8281 c-7881.0151 8570.6563 -7881.7183 8570.1885 -7882.4468 8570.1885 c-7883.7754 8570.1885 -7885 8571.3066 -7885 8573.6768 c-7885 8575.6309 -7883.75 8576.5674 -7882.6812 8576.5674 c-7881.6133 8576.5674 -7881.2495 8575.9688 -7880.8848 8575.6826 c-7880.7549 8575.5791 -7880.6758 8575.5273 -7880.6245 8575.5273 c-7880.5469 8575.5273 -7880.52 8575.6055 -7880.52 8575.7617 c-7880.52 8576.3857 -7880.0508 8579.1738 -7880.0508 8579.7461 c-7880.0508 8580.4746 -7880.0508 8586.4395 -7882.1089 8586.4395 c-7883.0728 8586.4395 -7883.5679 8585.6846 -7883.5679 8584.7979 c-7883.5679 8584.1465 -7882.6289 8583.2891 -7882.3169 8582.8447 c-7881.7959 8582.1426 -7881.7959 8581.6201 Y-7881.7959 8581.4648 -7881.8477 8581.3857 -7881.9517 8581.3613 C-7882.9678 8581.2305 -7883.1768 8581.1514 -7883.1768 8580.8662 c-7883.1768 8580.3975 -7882.4209 8579.5898 -7882.0303 8579.4082 c-7881.7437 8579.2773 -7881.6133 8578.9912 -7881.6133 8578.7041 c-7881.6133 8578.418 -7881.7437 8578.0801 -7882.1865 8578.0801 c-7883.2021 8578.0801 -7884.9229 8580.71 -7884.9229 8581.2041 c-7884.9229 8581.6738 -7884.6616 8582.0117 -7884.27 8582.1953 c-7884.1665 8582.2461 -7884.1143 8582.377 -7884.1143 8582.5322 c-7884.1143 8582.6895 -7884.1665 8582.8447 -7884.2969 8582.9756 C-7884.5835 8583.21 -7884.9468 8583.9141 -7884.9468 8584.5381 c-7884.9468 8585.3789 -7884.4604 8586.3994 -7883.7207 8587 C-7881.0439 8587 L-7880.9341 8586.9082 -7880.8301 8586.8076 -7880.7285 8586.7002 c-7880.4678 8586.4395 -7880.3125 8586.3359 -7880.1812 8586.3359 c-7880.0254 8586.3359 -7879.6089 8586.9346 -7879.4785 8586.9346 c-7878.8008 8586.9346 -7878.8008 8586.3877 -7878.8008 8585.1895 c-7878.8008 8585.0059 -7878.8535 8584.1738 -7878.8535 8584.0176 c-7878.8535 8583.7578 -7878.7754 8583.627 -7878.6445 8583.627 c-7878.5396 8583.627 -7878.4102 8583.7305 -7878.2788 8583.8877 c-7877.5078 8584.8438 -7876.0596 8586.2529 -7874.0928 8587 C-7868.5278 8587 L-7867.3564 8586.5391 -7866.4448 8585.7979 -7865.7349 8584.9287 C-7865.5425 8585.7793 -7864.9136 8586.998 -7862.9766 8586.998 c-7861.9438 8586.998 -7861.0239 8586.4492 -7860.6079 8585.6201 C-7859.6665 8585.2891 -7859.1108 8584.2793 -7859.1108 8583.1318 c-7859.1108 8581.1953 -7860.3301 8580.5664 -7861.1797 8580.373 C-7860.3096 8579.666 -7859.5693 8578.7529 -7859.1089 8577.582 C-7859.1089 8572.0156 L-7859.8564 8570.0488 -7861.2646 8568.6006 -7862.2207 8567.8281 c-7862.3774 8567.6982 -7862.4551 8567.5938 -7862.4551 8567.5146 c-7862.4551 8567.125 -7860.2148 8567.0986 -7859.7461 8567.0986 c-7859.4863 8567.0986 -7859.3564 8566.8652 -7859.3564 8566.6309 c-7859.3564 8566.4209 -7859.4336 8566.2402 -7859.6157 8566.2129 c-7859.8237 8566.1885 -7859.9551 8566.1357 -7859.9551 8566.0059 c-7859.9551 8565.875 -7859.7988 8565.6924 -7859.4077 8565.3809 cf1 D-7862.2988 8583.582 m-7862.23 8583.5693 -7862.1743 8583.5596 -7862.1421 8583.5596 c-7861.7783 8583.5596 -7861.2832 8583.9502 -7861.2832 8584.6543 c-7861.2832 8584.7109 -7861.2896 8584.7676 -7861.2998 8584.8242 C-7861.9854 8584.8105 -7862.3662 8584.3242 -7862.3662 8583.9648 c-7862.3662 8583.9023 -7862.3276 8583.7295 -7862.2988 8583.582 Cf-7859.9185 8583.1582 m-7859.9185 8583.5488 -7860.0835 8584.043 -7860.3872 8584.3916 C-7860.5181 8583.3594 -7861.4956 8582.7266 -7862.2471 8582.7266 c-7862.8208 8582.7266 -7863.1846 8582.9863 -7863.1846 8583.2734 c-7863.1846 8583.3066 -7863.1846 8583.3818 -7863.1509 8583.458 C-7863.1812 8583.5762 -7863.1992 8583.7119 -7863.1992 8583.8613 c-7863.1992 8584.5439 -7862.6772 8585.4121 -7861.8086 8585.666 C-7862.1445 8585.9766 -7862.5825 8586.1914 -7862.9502 8586.1914 c-7864.4077 8586.1914 -7864.9292 8585.1738 -7864.9292 8584.3418 c-7864.9292 8584.125 -7864.9209 8583.9375 -7864.8945 8583.7676 C-7864.4512 8583.1338 -7864.1064 8582.6543 -7863.8179 8582.293 C-7863.4541 8582.002 -7862.9736 8581.6582 -7862.3423 8581.2139 C-7862.1709 8581.1865 -7861.9849 8581.1777 -7861.7676 8581.1777 c-7860.9336 8581.1777 -7859.9185 8581.6992 -7859.9185 8583.1582 cf-7861.7261 8570.4072 m-7861.4141 8570.4072 -7859.6157 8571.6055 -7859.6157 8574.7568 c-7859.6157 8577.7227 -7861.3276 8580.6377 -7864.5757 8580.6934 C-7864.5781 8580.666 -7864.5796 8580.6357 -7864.5796 8580.6064 c-7864.5796 8580.4814 -7864.7769 8578.7598 -7865.8911 8577.3984 C-7865.8086 8577.4082 -7865.7236 8577.4141 -7865.6328 8577.4141 c-7864.5132 8577.4141 -7863.6274 8576.293 -7863.6274 8575.3037 c-7863.6274 8574.3145 -7864.4351 8572.6738 -7866.9092 8572.6738 c-7869.1797 8572.6738 -7870.2173 8574.5098 -7870.3564 8575.8359 C-7871.6064 8576.1465 -7873.0449 8577.1895 -7873.0449 8579.1992 c-7873.0449 8581.6738 -7871.4048 8582.4814 -7870.4141 8582.4814 c-7869.4238 8582.4814 -7868.3047 8581.5957 -7868.3047 8580.4746 c-7868.3047 8580.4053 -7868.3086 8580.3369 -7868.3145 8580.2734 C-7867.0869 8581.2129 -7865.7246 8581.5293 -7865.5029 8581.5293 c-7865.4751 8581.5293 -7865.4468 8581.5303 -7865.4199 8581.5322 C-7865.5645 8584.6709 -7868.1621 8586.4922 -7871.3516 8586.4922 c-7873.6436 8586.4922 -7876.3008 8585.0586 -7876.3008 8584.0693 c-7876.3008 8583.6533 -7875.5181 8583.5752 -7875.3628 8583.5752 c-7875.2588 8583.5752 -7874.6592 8583.7041 Y-7874.5293 8583.7041 -7874.4512 8583.6006 -7874.4512 8583.4697 c-7874.4512 8583.2354 -7875.0767 8582.2725 -7876.0132 8582.2725 c-7876.5352 8582.2725 -7877.2383 8582.2207 -7877.4727 8581.9336 c-7877.6289 8581.752 -7878.1499 8580.5791 -7878.1499 8580.3457 c-7878.1499 8580.2139 -7878.0708 8580.1367 -7877.9155 8580.1367 c-7877.7075 8580.1367 -7876.7949 8580.3184 -7876.6133 8580.3184 c-7875.2329 8580.3184 -7874.2168 8579.5117 -7874.2168 8578.0527 c-7874.2168 8577.8975 -7874.2432 8577.3242 -7874.4775 8577.3242 c-7874.6079 8577.3242 -7874.9727 8577.8711 -7875.1021 8577.8711 c-7875.2329 8577.8711 -7875.3101 8577.793 -7875.3101 8577.6621 c-7875.3101 8577.6367 -7875.2075 8576.9854 -7875.2075 8576.8809 c-7875.2075 8575.918 -7875.8325 8575.6055 -7876.0669 8575.6055 c-7876.5605 8575.6055 -7876.8213 8575.9951 -7876.8213 8576.5166 c-7876.8213 8576.6465 -7876.7949 8576.7773 -7876.7695 8576.9336 C-7876.6133 8577.6113 -7876.0669 8577.8711 -7876.0669 8578.418 c-7876.0669 8579.1738 -7877.0557 8579.4336 -7877.8115 8579.4336 c-7878.7231 8579.4336 -7879.2695 8577.8184 -7879.2695 8576.0986 c-7879.2695 8575.0703 -7878.8765 8573.5898 -7878.4009 8572.4229 c-7877.9727 8571.377 -7876.9492 8571.3984 -7876.5552 8571.3193 c-7876.5449 8571.3184 -7875.5605 8571.1162 -7875.2412 8570.8223 c-7874.8276 8570.4395 -7874.6992 8569.6191 -7874.6982 8569.6074 c-7874.6621 8569.252 -7874.6807 8568.1016 -7873.5845 8567.666 c-7872.4326 8567.209 -7871.0088 8566.8389 -7870.0088 8566.8389 c-7868.2896 8566.8389 -7866.6748 8567.3857 -7866.6748 8568.2969 c-7866.6748 8569.0527 -7866.9355 8569.6777 -7867.6909 8569.6777 c-7868.2373 8569.6777 -7868.4985 8569.1309 -7869.1758 8568.9746 C-7869.3325 8568.9482 -7869.4629 8568.9229 -7869.5918 8568.9229 c-7870.1133 8568.9229 -7870.5039 8569.1836 -7870.5039 8569.6777 c-7870.5039 8569.9121 -7870.1919 8570.5361 -7869.2285 8570.5361 c-7869.1235 8570.5361 -7868.4717 8570.4336 -7868.4453 8570.4336 c-7868.3154 8570.4336 -7868.2373 8570.5117 -7868.2373 8570.6416 c-7868.2373 8570.7725 -7868.7837 8571.1357 -7868.7837 8571.2666 c-7868.7837 8571.502 -7868.2109 8571.5273 -7868.0552 8571.5273 c-7867.0918 8571.5273 -7865.7896 8570.9023 -7865.7896 8569.4434 c-7865.7896 8569.2607 -7865.9717 8568.4014 -7865.9717 8568.1934 c-7865.9717 8568.0361 -7865.8936 8567.959 -7865.7637 8567.959 c-7865.0332 8567.959 -7863.8096 8568.6621 -7863.8096 8570.2246 c-7863.8096 8570.9541 -7862.9502 8571.6572 -7862.6108 8571.6572 c-7862.4028 8571.6572 -7861.9604 8570.4072 -7861.7261 8570.4072 cf-7870.3271 8576.8682 m-7870.2246 8577.6641 -7869.9595 8578.334 -7869.6016 8578.8926 C-7869.6357 8578.8887 -7869.6636 8578.8857 -7869.6846 8578.8857 c-7870.0493 8578.8857 -7870.4668 8579.043 -7870.7012 8579.2773 C-7870.9355 8579.4854 -7871.1436 8579.5898 -7871.3262 8579.5898 c-7871.5869 8579.5898 -7871.8472 8579.3301 -7871.8472 8578.7305 c-7871.8472 8577.625 -7871.0615 8577.1016 -7870.3271 8576.8682 Cf-7866.8311 8574.9648 m-7867.1172 8575.0693 -7867.2476 8575.5117 -7867.2476 8575.9023 c-7867.2476 8576.0059 -7867.23 8576.1504 -7867.1836 8576.3086 C-7867.7646 8575.9873 -7868.4727 8575.7754 -7869.3354 8575.7402 C-7869.1729 8574.9453 -7868.6836 8573.8447 -7867.2739 8573.8447 c-7866.4409 8573.8447 -7866.3101 8574.4697 -7866.3101 8574.5479 c-7866.3101 8574.7305 -7866.4927 8574.8613 -7866.8311 8574.9648 Cf-7869.3936 8576.7002 m-7869.3589 8576.6992 -7869.3247 8576.6992 -7869.2949 8576.6992 c-7867.5078 8576.6992 -7865.7461 8578.3975 -7865.4556 8580.6182 C-7867.5215 8580.2266 -7869.2188 8578.3623 -7869.3936 8576.7002 Cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 D0 J 0 j 1 w 4 M []0 d0 XR-7884.8833 8586.9551 m-7793.0479 8586.9551 L-7793.0479 8582.6758 L-7884.8833 8582.6758 L-7884.8833 8586.9551 Ln0 O0 0 0 1 k-7884.6631 8584.2754 m-7885 8584.3418 -7884.4814 8584.5313 -7884.8833 8584.3887 C-7884.8379 8584.2705 -7884.7725 8584.1816 -7884.6631 8584.2754 Cf-7794.1675 8584.4414 m-7795.2524 8585.2041 -7796.6816 8584.4336 -7797.8701 8584.9199 C-7798.0098 8584.9521 -7797.8345 8584.502 -7798.1484 8584.6025 C-7799.3008 8585.1953 -7801.1162 8584.8418 -7802.5195 8584.3848 C-7802.4346 8584.2666 L-7802.7017 8584.1816 -7803.0283 8584.5723 -7803.3115 8584.5176 C-7803.3135 8584.4395 -7803.2207 8584.4063 -7803.2861 8584.2988 C-7803.3574 8584.5352 -7803.7983 8584.4082 -7803.9185 8584.584 C-7804.0303 8584.4922 -7804.0195 8584.3047 -7804.1641 8584.2012 C-7804.3262 8584.4697 L-7804.7769 8585.1094 -7805.4209 8584.4258 -7806.0361 8584.7559 C-7806.0063 8584.6934 -7805.9453 8584.6445 -7805.9941 8584.584 C-7806.9814 8584.9727 -7808.2168 8584.9004 -7809.3208 8585.043 C-7809.2769 8584.9482 -7809.2363 8584.7754 -7809.3008 8584.668 C-7809.3555 8584.9512 -7809.6963 8585.0225 -7809.9922 8585.0781 C-7810.1255 8584.7871 -7810.4995 8585.3438 -7810.8467 8585.1836 C-7810.8169 8585.1191 L-7811.0732 8585.4238 -7811.1973 8584.9434 -7811.4053 8585.3086 C-7811.5684 8585.0801 L-7811.6807 8585.4902 -7811.9395 8584.8672 -7812.1514 8585.0762 C-7812.1445 8585.1602 L-7812.3442 8585.2598 -7812.4482 8585.0537 -7812.6338 8585.123 C-7812.6514 8585.0762 L-7813.0854 8585.1836 -7813.3379 8584.9551 -7813.3271 8585.2754 C-7813.4795 8585.0186 -7812.9063 8585.1582 -7813.1455 8584.7852 C-7814.5732 8585.1152 -7816.0459 8585.0508 -7817.4834 8585.0566 C-7817.6465 8584.9277 -7817.7505 8584.8887 -7817.7871 8584.7676 C-7817.9307 8584.832 -7818.3281 8584.8262 -7818.4585 8584.9902 C-7818.4102 8584.9834 -7818.5513 8584.8262 -7818.6274 8584.8105 C-7818.8887 8584.6895 -7818.9131 8585.1621 -7819.2002 8585.0186 C-7819.0859 8584.9336 -7819.0469 8584.8301 -7819.0854 8584.7109 C-7819.3301 8584.9609 -7819.6577 8584.9209 -7819.9473 8585.002 C-7819.9023 8584.9482 -7819.8325 8584.916 -7819.8433 8584.8154 C-7820.1602 8585.0986 -7820.4209 8584.7559 -7820.6982 8584.9346 C-7820.5947 8584.75 L-7821.0415 8584.5254 -7820.7266 8585.1367 -7821.1128 8585.0039 C-7821.02 8584.9453 -7821.0527 8584.873 -7821.0361 8584.7979 C-7821.3965 8585.1338 -7821.9795 8585.0225 -7822.3389 8585.1367 C-7822.3174 8585.1113 -7822.3232 8585.0605 Y-7822.7148 8585.1025 -7823.1245 8584.998 -7823.5552 8585.1445 C-7823.7119 8585.0625 -7823.5039 8584.6934 -7823.9185 8584.7617 C-7823.9033 8585.1328 -7824.6221 8584.9141 -7824.3779 8585.334 C-7824.7319 8585.2734 -7825.2925 8585.1338 -7825.5283 8585.2598 C-7825.3691 8585.1191 -7825.7007 8584.8066 -7825.4063 8584.7754 C-7825.6289 8584.5498 L-7825.5957 8584.3984 -7825.3999 8584.6016 -7825.4707 8584.4102 C-7825.6182 8584.4258 -7826.0479 8584.5723 -7826.1797 8584.5117 C-7826.4531 8584.7393 -7826.7041 8585.1641 -7827.1465 8585.2109 C-7826.9385 8585.0664 -7827.2646 8584.8018 -7827.1235 8584.7383 C-7827.7407 8585.4492 L-7827.8877 8585.4668 -7827.7725 8585.1563 -7827.9854 8585.2529 C-7827.9746 8585.3516 -7828.0674 8585.4121 -7828.1318 8585.4922 C-7828.1875 8585.4492 -7828.7441 8585.584 -7828.8081 8585.2188 C-7828.8735 8585.0762 -7828.5684 8585.1426 -7828.7314 8585.0117 C-7829.0029 8585.0156 -7829.0151 8585.1406 -7829.2871 8585.1465 C-7829.2925 8585.0977 L-7829.4717 8585.043 -7829.8213 8585.2529 -7829.6265 8585.4551 C-7829.5015 8585.4668 -7829.6738 8585.2354 -7829.4888 8585.3418 C-7829.6152 8585.5537 -7829.9312 8585.6133 -7830.2031 8585.6172 C-7830.1104 8585.5586 -7830.1216 8585.4609 -7830.0845 8585.3574 C-7830.4497 8585.6445 -7830.8369 8585.7354 -7831.2451 8585.8555 C-7831.2515 8586.0293 -7831.0928 8585.5391 -7831.0327 8585.6309 C-7831.5557 8585.3896 -7832.1128 8585.9727 -7832.5479 8585.6201 C-7832.4766 8585.5898 -7832.5098 8585.8672 -7832.5146 8585.8184 C-7832.7666 8585.7969 -7832.7549 8585.5449 -7832.9189 8585.6377 C-7832.9355 8585.4902 -7833.1255 8585.6855 -7833.2944 8585.7305 C-7833.3818 8585.8369 -7833.3384 8585.6582 -7833.1914 8585.6426 C-7833.4268 8585.7676 -7834.3691 8585.9941 -7834.9131 8585.7793 C-7834.9023 8585.877 -7835.2471 8586.1377 -7835.3721 8586.127 C-7835.3232 8585.8984 L-7835.4375 8585.7617 -7835.7422 8585.918 -7835.7632 8585.7227 C-7836.0303 8586 -7834.7344 8585.4863 -7835.0957 8585.7002 C-7835.1895 8585.5098 -7835.5991 8586.0645 -7835.5215 8585.7529 C-7835.7725 8585.7617 -7836.0161 8586.0186 -7836.2559 8585.8047 C-7836.1865 8585.8418 -7836.0522 8585.4873 -7836.2549 8585.5039 C-7836.6123 8585.5449 -7836.3564 8585.6133 -7836.6465 8585.6895 C-7836.8281 8585.7832 L-7836.8398 8586.0059 -7837.1475 8585.7529 -7837.0146 8586.002 C-7837.0586 8585.8184 -7837.5337 8586.1152 -7837.4971 8585.7461 C-7837.4473 8585.4551 L-7837.6016 8585.4766 -7837.7002 8585.7617 -7837.8213 8585.8896 C-7837.8418 8585.8633 -7837.8823 8585.8047 -7837.8745 8585.7578 C-7837.8994 8586.2031 -7838.2432 8585.7207 -7838.4268 8586.0645 C-7838.7505 8585.9102 -7839.2495 8586.0508 -7839.4023 8585.7734 C-7839.6514 8585.9082 -7839.8784 8586.0684 -7840.1621 8585.9727 C-7840.1055 8585.9307 -7840.0283 8585.918 -7840.0122 8585.8223 C-7840.1904 8585.6914 -7840.2344 8585.8086 -7840.3975 8585.8809 C-7840.3608 8585.8145 -7840.7539 8585.6201 -7840.9521 8585.4629 C-7841.1992 8585.5957 -7841.1143 8585.8359 -7841.1392 8585.9824 C-7841.3652 8585.543 -7841.8379 8586.2656 -7842.1211 8585.8672 C-7842.0352 8585.8066 -7841.7598 8585.6514 -7841.9658 8585.541 C-7842.1919 8585.1025 -7842.4219 8585.8652 -7842.7861 8585.6543 C-7842.6968 8586.0186 L-7842.8594 8585.793 -7843.2334 8586.2305 -7843.1963 8585.8594 C-7843.3184 8585.9902 -7843.6265 8585.7383 -7843.5859 8586.0938 C-7844.1846 8585.793 -7845.0425 8586.2754 -7845.4102 8585.6377 C-7845.4961 8585.6973 -7845.7104 8585.6367 -7845.6665 8585.8193 C-7845.5239 8586.0176 -7845.4673 8585.6777 -7845.4141 8585.8125 C-7845.4912 8585.8232 -7845.5078 8585.9209 -7845.5161 8585.9697 C-7845.7021 8585.8887 -7845.8486 8585.8633 -7845.6729 8585.5674 C-7846.0869 8585.3477 -7846.1001 8586.1719 -7846.6274 8586.0332 C-7846.6035 8585.8857 -7846.6436 8585.8301 -7846.7979 8585.8535 C-7847.0903 8586.1055 L-7847.4312 8586.0469 -7847.2842 8585.7705 -7847.2925 8585.5215 C-7847.4746 8585.5645 -7847.6973 8585.5527 -7847.7803 8585.7383 C-7848.0015 8585.4258 L-7847.8398 8585.6514 -7848.1514 8585.5762 -7848.2368 8585.6367 C-7848.1514 8585.5762 L-7848.1846 8585.4697 -7848.3955 8585.5352 -7848.5024 8585.5664 C-7848.4766 8585.7207 -7848.2617 8585.7832 -7848.1445 8585.8281 C-7848.2373 8585.9375 -7848.3823 8585.9121 -7848.5059 8586.041 C-7848.4648 8585.7969 -7848.8027 8585.8672 -7848.9473 8585.8418 C-7849.1133 8585.7891 -7849.1348 8586.0605 -7849.1831 8586.0527 C-7849.1875 8585.9258 -7849.4541 8586.0313 -7849.3247 8585.8535 C-7849.2681 8585.8125 -7849.1953 8585.9766 -7849.1016 8585.8652 C-7849.2109 8585.7705 -7849.1982 8585.5498 -7849.4258 8585.7109 C-7849.5967 8585.832 -7849.3818 8586.1934 -7849.7061 8586.0391 C-7849.6211 8585.9785 -7849.6055 8585.8809 -7849.5391 8585.793 C-7849.8433 8585.666 L-7849.8564 8585.8887 L-7849.8975 8585.832 -7849.8691 8585.8125 -7849.8877 8585.7832 C-7849.9785 8586.0176 -7850.3521 8585.8555 -7850.4209 8586.1191 C-7850.5742 8586.1426 -7850.7441 8585.9648 -7850.8906 8585.9395 C-7850.8623 8585.9199 L-7851.0415 8585.7891 -7851.2793 8585.875 -7851.4297 8586.0254 C-7851.4219 8585.9766 L-7851.5195 8585.959 -7851.7505 8585.9941 -7851.8735 8586.125 C-7852.1201 8585.957 -7851.9561 8585.2842 -7852.2295 8585.5645 C-7852.48 8585.5723 -7852.6221 8585.9727 -7852.5215 8586.1152 C-7852.9717 8585.9648 -7853.4834 8586.3281 -7853.9009 8585.9824 C-7853.9658 8586.0723 -7853.9248 8586.1289 -7854.0586 8586.1816 C-7854.7197 8586.0938 -7855.4551 8586.4453 -7855.9814 8586.0078 C-7855.79 8585.9141 -7855.9688 8585.7852 -7855.9727 8585.6582 C-7856.1309 8585.8574 -7856.1631 8585.4512 -7856.2197 8585.793 C-7856.2041 8585.9941 -7856.2197 8586.0918 -7856.0337 8586.1729 C-7856.4282 8586.2813 -7857.0283 8586.2813 -7857.2471 8586.0938 C-7857.1377 8586.1865 -7857.2227 8586.248 -7857.3086 8586.3086 C-7857.2803 8585.9873 -7857.5713 8585.9395 -7857.7915 8586.0527 C-7857.8223 8586.248 L-7857.9658 8586.0469 L-7858.0503 8586.1094 -7858.0591 8586.457 -7858.2773 8586.2695 C-7858.2891 8586.1934 -7858.3018 8586.1162 -7858.3418 8586.0605 C-7858.5693 8586.2207 -7858.8906 8586.4922 -7859.1377 8586.3262 C-7859.3398 8586.041 L-7859.4453 8586.0723 -7859.6235 8586.2441 -7859.4375 8586.3262 C-7859.8594 8586.1543 -7860.1309 8586.1328 -7860.2646 8585.8857 C-7860.9912 8586.4873 -7862.0459 8586.5117 -7862.8906 8586.4688 C-7862.8652 8586.3223 L-7863.0923 8586.1855 -7862.9834 8586.5781 -7863.1416 8586.4766 C-7863.0684 8586.3369 -7863.3145 8586.1729 -7863.1362 8586.002 C-7863.4609 8585.8477 -7863.5547 8586.2559 -7863.7656 8586.3223 C-7863.7979 8586.5146 -7863.5957 8586.1992 -7863.6367 8586.4434 C-7863.6729 8586.5117 -7864.0859 8586.293 -7864.1362 8586.584 C-7864.2178 8586.4697 -7864.1543 8586.2559 -7864.1104 8586.1377 C-7864.3086 8586.2793 L-7864.5513 8585.9395 -7863.7559 8585.6719 -7864.0107 8585.2529 C-7864.1934 8585.2988 L-7864.3682 8584.9941 -7863.71 8584.9551 -7864.1689 8584.8506 C-7864.3682 8584.9941 -7864.5381 8585.416 -7864.3608 8585.5449 C-7864.7754 8585.625 -7864.5527 8586.2383 -7864.9985 8586.2139 C-7865.1201 8586.043 -7864.6416 8586.1729 -7864.7275 8585.9336 C-7864.9375 8585.6992 -7865.1484 8586.0645 -7865.3354 8585.9824 C-7865.1279 8586.0918 -7865.3032 8586.3857 -7865.4375 8586.4395 C-7865.6641 8586.3018 -7865.29 8586.1641 -7865.6113 8586.1338 C-7865.6641 8586.3018 -7865.9595 8586.4277 -7865.7041 8586.5449 C-7865.8203 8586.9258 -7866.0381 8586.4395 -7866.2129 8586.7344 C-7866.3174 8586.4668 -7865.8823 8586.1152 -7866.2354 8585.9814 C-7866.1792 8586.2393 -7866.6704 8586.332 -7866.4839 8586.7148 C-7866.6221 8586.6406 -7866.6367 8586.4375 -7866.5361 8586.2793 C-7866.7334 8586.1201 -7867.0151 8586.75 -7867.0801 8586.2383 C-7867.1479 8586.502 L-7867.21 8586.416 -7867.2983 8586.3516 -7867.3994 8586.209 C-7867.5732 8586.2041 -7867.96 8586.5664 -7867.9443 8586.168 C-7868 8586.209 -7868.3975 8586.1914 -7868.2441 8586.4668 C-7867.9971 8586.6348 -7867.96 8586.2656 -7867.8223 8586.6377 C-7867.9971 8586.334 -7868.1787 8586.6777 -7868.3213 8586.7793 C-7868.3447 8586.625 L-7868.4297 8586.6855 -7868.6255 8586.6514 -7868.6787 8586.8184 C-7868.6133 8586.7305 -7868.6475 8586.625 -7868.7148 8586.5879 C-7868.8042 8586.8223 L-7869.1494 8586.9395 -7868.8857 8586.4102 -7869.2217 8586.4785 C-7868.9663 8586.2969 L-7869.0225 8586.3359 -7869.1367 8586.1162 -7869.2979 8586.1895 C-7869.3604 8586.4033 -7869.4775 8586.6602 -7869.5313 8586.8262 C-7869.7207 8586.9199 -7869.6162 8586.585 -7869.8027 8586.8047 C-7869.5586 8586.5469 L-7869.5215 8586.4766 -7869.7231 8586.1934 -7869.9761 8586.1992 C-7870.1377 8586.2734 -7870.3887 8586.582 -7870.1338 8586.6992 C-7870.2607 8586.7031 -7870.4385 8586.5723 -7870.3379 8586.416 C-7870.6255 8586.4902 -7870.2998 8586.6465 -7870.5479 8586.7793 C-7870.6494 8586.6367 -7870.9658 8586.4336 -7871.1563 8586.2266 C-7870.8975 8585.8682 L-7871.0693 8585.8652 L-7870.8467 8585.5781 -7871.1826 8585.6465 -7871.0566 8585.3438 C-7871.1743 8585.2969 -7871.3169 8585.3994 -7871.4307 8585.4785 C-7871.0864 8585.9629 -7871.8159 8586.1406 -7871.7158 8586.582 C-7872.1875 8586.7031 -7872.0107 8585.5078 -7872.5024 8586.1992 C-7872.4219 8586.3145 -7872.6533 8586.6504 -7872.3564 8586.5225 C-7872.6494 8586.4746 -7872.5557 8586.9658 -7872.9014 8586.7832 C-7872.6455 8586.6016 -7873.1763 8586.3359 -7872.8066 8586.0723 C-7872.8311 8586.2188 -7872.6001 8586.1836 -7872.5435 8586.1426 C-7872.6641 8585.9727 -7872.5186 8585.6973 -7872.8184 8585.6973 C-7873.0015 8585.7393 -7873.2524 8585.748 -7873.2158 8585.9785 C-7873.2085 8586.2314 -7872.9365 8585.9512 -7873.0537 8586.207 C-7873.4185 8586.2949 -7873.4795 8585.9102 -7873.6304 8586.3594 C-7873.3999 8586.3232 -7873.3423 8586.584 -7873.3467 8586.7578 C-7873.6143 8586.8633 L-7873.5625 8586.6953 L-7873.9922 8586.5742 -7873.6895 8587 -7874.1055 8586.9551 C-7874.3008 8586.623 L-7874.2017 8586.3369 -7873.6953 8586.75 -7873.7695 8586.2842 C-7874.04 8586.2656 -7874.1299 8586.502 -7874.3848 8586.3818 C-7874.3281 8586.3418 -7874.2505 8586.3301 -7874.1943 8586.2891 C-7874.2915 8586.2734 -7874.3877 8585.6563 -7874.7734 8586.0176 C-7874.9727 8586.1582 -7874.8262 8586.1836 -7874.8311 8586.3574 C-7875.2656 8586.4102 -7875.3955 8586.5879 -7875.6753 8586.6152 C-7875.6177 8586.2754 -7876.1699 8586.582 -7875.8608 8586.2344 C-7875.7188 8586.4336 -7875.0903 8586.4141 -7874.9365 8586.0898 C-7875.0947 8585.6865 -7874.5952 8586.1465 -7874.5024 8585.7383 C-7874.8506 8585.7285 -7874.8335 8585.332 -7874.8896 8585.0723 C-7874.9863 8585.0537 -7875.0801 8585.1641 -7875.1377 8585.2041 C-7875.1787 8585.4492 -7875.0522 8585.4453 -7875.0449 8585.6973 C-7875.4336 8585.6309 -7875.8081 8585.7676 -7876.0225 8586.0059 C-7876.1523 8585.8848 -7876.1113 8585.6406 -7875.9575 8585.6172 C-7876.4199 8585.6895 -7876.9141 8585.6563 -7877.3535 8585.582 C-7877.0693 8585.9814 -7877.8433 8585.6758 -7877.6494 8586.0078 C-7877.4141 8586.0977 -7877.2119 8586.3818 -7877.3418 8586.5605 C-7877.4888 8586.5352 -7877.3369 8586.3857 -7877.3984 8586.3008 C-7877.5859 8586.5186 -7877.6895 8585.9512 -7877.8735 8586.2949 C-7877.4512 8586.166 -7877.7915 8585.8086 -7877.7139 8585.4961 C-7878.0186 8585.6719 -7877.7007 8585.2734 -7878.0024 8585.2734 C-7878.3057 8585.4473 -7878.6787 8585.584 -7879.0161 8585.6514 C-7879.4399 8585.3555 -7880.0898 8585.6465 -7880.4683 8585.6582 C-7880.6665 8585.5 -7880.5322 8585.1465 -7880.7471 8585.085 C-7880.9995 8585.0918 -7880.5601 8585.4668 -7880.9336 8585.3047 C-7880.8975 8585.2344 L-7881.0107 8585.3164 -7881.5825 8584.9941 -7881.6929 8585.502 C-7881.5776 8585.1191 L-7881.6475 8585.084 -7881.7119 8585.1719 -7881.7695 8585.2129 C-7881.7725 8585.0879 -7881.8535 8584.9746 -7881.7402 8584.8926 C-7881.9707 8584.6289 -7882.2241 8584.9346 -7882.4746 8584.9453 C-7882.3135 8585.1719 L-7882.7422 8585.3496 -7883.0293 8585.125 -7883.4443 8585.2041 C-7883.4316 8584.9824 L-7883.6787 8585.1152 L-7883.6182 8584.9004 -7883.8447 8584.7617 -7883.9751 8584.9414 C-7883.3335 8584.3984 L-7883.1553 8584.5293 -7883.5283 8584.666 -7883.4165 8584.8848 C-7883.3213 8585.0762 -7882.9375 8585.0156 -7882.8755 8584.8018 C-7883.0225 8584.7773 -7883.0293 8584.8262 -7883.1436 8584.9063 C-7883.1919 8584.5977 -7882.9688 8584.6094 -7882.8584 8584.4033 C-7882.9355 8584.416 -7883.0449 8584.3223 -7883.0615 8584.4199 C-7882.9102 8584.2695 -7882.7578 8584.2461 -7882.5059 8584.2383 C-7882.6763 8584.3594 -7882.4131 8584.4297 -7882.4775 8584.5176 C-7882.4575 8584.2461 -7882.2168 8584.1621 -7881.9053 8584.2383 C-7881.6831 8584.5527 -7881.3208 8584.0361 -7880.96 8584.123 C-7881.1064 8584.3984 -7881.2935 8584.6191 -7881.5127 8584.7305 C-7881.2861 8584.8682 -7881.2607 8584.7227 -7881.0337 8584.8613 C-7880.9238 8584.6563 -7880.8457 8584.3418 -7880.5503 8584.2168 C-7880.5342 8584.4199 L-7880.2666 8584.3164 -7880.2666 8584.0156 -7879.9258 8584.0723 C-7879.3418 8584.1719 -7878.7407 8584.1719 -7878.2949 8584.1973 C-7878.2783 8584.3994 L-7878.0303 8583.9658 -7877.4521 8584.2393 -7877.1182 8584.0469 C-7876.5503 8584.2422 -7875.8848 8583.8535 -7875.5938 8584.2031 C-7874.5913 8584.0469 -7873.7148 8583.8945 -7872.6768 8583.9688 C-7872.8516 8584.2637 L-7872.6655 8584.0469 -7872.7305 8584.4336 -7872.5479 8584.3896 C-7872.7578 8584.1543 -7872.2949 8584.084 -7872.1665 8583.9033 C-7871.7041 8584.1328 -7871.1104 8583.8828 -7870.7007 8583.6758 C-7870.6846 8583.8789 L-7870.2705 8583.498 -7869.7759 8583.832 -7869.2598 8583.8945 C-7869.2007 8583.9785 -7869.1074 8584.1689 -7868.9536 8584.1465 C-7868.6738 8583.8184 -7868.5273 8583.8418 -7868.1167 8583.6367 C-7867.8169 8583.6367 -7867.3301 8583.7178 -7867.0254 8583.8457 C-7865.8975 8583.3848 -7864.7456 8583.6797 -7863.5732 8583.4023 C-7863.4888 8583.6406 L-7862.3521 8583.1309 -7860.9541 8583.5938 -7859.9839 8583.332 C-7860.0776 8583.7393 L-7859.7734 8583.8652 -7859.3843 8583.6328 -7859.4619 8583.3438 C-7859.1567 8583.4688 -7858.7007 8583.1465 -7858.5068 8583.4814 C-7858.1953 8583.5566 -7858.1255 8583.293 -7857.8662 8583.2383 C-7857.2422 8583.3926 -7857.0107 8583.3574 -7856.4224 8583.2813 C-7856.5684 8583.2559 L-7856.6328 8583.3457 -7856.6387 8583.5186 -7856.4922 8583.5449 C-7856.2725 8583.4316 -7855.6846 8583.6543 -7855.9033 8583.168 C-7855.2754 8583.4492 -7854.4385 8582.9395 -7853.8271 8583.3184 C-7853.8789 8583.1855 -7853.7246 8583.1602 -7853.6602 8583.0703 C-7853.1089 8583.0645 -7852.5293 8583.3359 -7852.0898 8583.1094 C-7852.0024 8583.1758 -7852.2295 8583.3359 -7852.0049 8583.3496 C-7851.8721 8583.2988 -7852.0024 8583.1758 -7851.8384 8583.1016 C-7850.9453 8582.8535 -7850.0303 8583.3574 -7849.2188 8583.293 C-7847.7754 8583.0361 -7846.2695 8583.166 -7844.8867 8583.123 C-7844.9023 8583.2207 L-7844.4395 8582.8477 -7843.8159 8583.6025 -7843.4463 8583.041 C-7843.3369 8583.1338 -7843.0283 8583.085 -7843.1094 8583.2734 C-7842.7407 8583.0098 -7842.0771 8583.5215 -7841.5439 8583.1865 C-7841.5928 8583.1777 -7841.6211 8583.1973 -7841.6777 8583.2393 C-7841.1392 8583.4551 -7840.6641 8583.1602 -7840.0957 8583.3555 C-7840.1533 8583.3975 -7840.2583 8583.4277 -7840.2754 8583.5254 C-7840.0557 8583.7129 -7839.7549 8583.1133 -7839.6348 8583.584 C-7839.5088 8583.5801 -7839.5449 8583.3477 -7839.6221 8583.3613 C-7838.3779 8583.5449 -7837.0498 8583.2441 -7835.7549 8583.1367 C-7834.8271 8583.418 -7835.6982 8583.9297 -7834.9663 8583.5781 C-7834.9063 8583.6689 -7834.9229 8583.3984 -7834.9131 8583.4961 C-7834.6299 8583.3643 -7834.4717 8584.0215 -7834.2754 8583.7754 C-7834.3564 8583.4863 -7834.1445 8583.6133 -7834.1387 8583.4375 C-7833.5713 8583.625 -7833.4575 8583.8857 -7833.0098 8583.666 C-7833.0435 8583.8184 L-7832.5186 8583.3887 -7831.9102 8583.6191 -7831.4673 8583.123 C-7828.5728 8583.0332 -7825.7983 8582.7578 -7822.9761 8582.7002 C-7820.1865 8582.7949 -7817.4551 8582.5723 -7814.6221 8582.8359 C-7813.9585 8583.2354 -7813.9087 8583.2246 -7813.1797 8583.0625 C-7813.2095 8583.127 -7813.2549 8583.1426 -7813.2061 8583.2031 C-7813.1699 8582.875 -7812.6929 8583.1719 -7812.6235 8582.8594 C-7811.5762 8582.9199 -7810.6113 8582.8301 -7809.5337 8582.8281 C-7809.7041 8582.8633 -7809.7896 8583.1309 -7809.5869 8583.1094 C-7809.3755 8582.9004 L-7809.3408 8582.9922 L-7809.2021 8582.9434 -7809.0513 8582.7813 -7809.1943 8582.6758 C-7806.4873 8582.3926 -7803.8242 8583.0508 -7801.1729 8582.9697 C-7800.5435 8583.1064 -7799.6475 8582.9814 -7798.9629 8582.9141 C-7796.9355 8583.3516 -7795.1079 8583.7041 -7793.0479 8583.3984 C-7793.3169 8584.2461 -7794.1675 8584.4414 Vf-7884.2578 8584.2422 m-7884.1855 8584.4063 -7883.9497 8584.4961 -7884.1377 8584.7148 C-7884.1611 8584.5605 -7884.2822 8584.3887 -7884.2578 8584.2422 Cf-7877.9619 8585.9297 m-7877.9536 8585.8809 -7877.8721 8585.9961 -7877.8521 8586.0225 C-7877.9297 8586.0352 -7878.0024 8586.1729 -7878.0645 8586.0879 C-7877.9854 8586.0762 -7877.9976 8585.998 -7877.9619 8585.9297 Cf-7876.3521 8586.0273 m-7876.3765 8586.1729 -7876.7207 8586.2891 -7876.9238 8586.3066 C-7876.3521 8586.0273 Lf-7874.8521 8586.6289 m-7874.7227 8586.752 -7874.7583 8586.8193 -7874.9326 8586.8154 C-7874.9453 8586.7383 -7874.8877 8586.6992 -7874.8521 8586.6289 Cf-7874.7456 8586.2969 m-7874.6211 8586.293 -7874.5591 8586.3789 -7874.4985 8586.4629 C-7874.5029 8586.3369 -7874.7871 8586.541 -7874.7456 8586.2969 Cf-7871.4893 8586.7207 m-7871.4111 8586.709 -7871.2417 8586.5879 -7871.1689 8586.75 C-7871.2505 8586.6367 -7871.5498 8586.9346 -7871.4893 8586.7207 Cf-7869.9761 8586.5 m-7869.9272 8586.5098 -7869.9072 8586.5361 -7869.8506 8586.4961 C-7869.7607 8586.5625 -7869.8555 8586.6689 -7869.9312 8586.6826 C-7869.9761 8586.5 Lf-7842.4287 8585.9141 m-7842.5923 8585.9863 L-7842.5684 8585.8418 L-7842.4287 8585.9141 Lf-7830.3574 8585.9063 m-7830.1943 8585.8145 -7830.2441 8586.043 -7830.2168 8586.0645 C-7830.3643 8586.0801 -7830.1621 8585.8848 -7830.3574 8585.9063 Cf-7823.8486 8585.1777 m-7823.8984 8585.1816 L-7823.8818 8584.8828 L-7823.8486 8585.1777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885 8587 m-7859.0591 8587 L-7859.0591 8561.0557 L-7885 8561.0557 L-7885 8587 Ln*u1 D0 O0.62 0.04 0.93 0 k-7859.9858 8580.915 m-7859.2168 8580.958 -7859.0718 8581.7461 -7859.4526 8581.8086 c-7859.8086 8581.8672 -7859.9175 8582.0762 -7859.7866 8582.2588 c-7859.6675 8582.4277 -7859.1934 8582.8096 -7859.0635 8582.9395 C-7859.0615 8582.9395 -7859.0635 8585.668 -7859.0635 8585.6689 c-7859.0703 8586.5098 -7859.6494 8586.3994 -7860.3896 8587 C-7863.1104 8587 L-7863.2085 8586.9102 -7863.2993 8586.8105 -7863.3818 8586.6992 c-7863.6943 8586.3096 -7863.8774 8586.1533 -7864.0063 8586.1533 c-7864.1377 8586.1533 -7864.1895 8586.2832 -7864.2158 8586.4922 c-7864.2417 8586.6738 -7864.4238 8586.752 -7864.6318 8586.752 c-7864.8662 8586.752 -7865.1006 8586.6221 -7865.1006 8586.3613 c-7865.1006 8585.8926 -7865.1279 8583.6514 -7865.5186 8583.6514 c-7865.5967 8583.6514 -7865.7002 8583.7305 -7865.8311 8583.8877 c-7866.6025 8584.8438 -7868.0513 8586.2529 -7870.0176 8587 C-7875.5835 8587 L-7876.9722 8586.4521 -7877.9951 8585.5146 -7878.7495 8584.4336 c-7880.8066 8581.4912 -7881.0142 8581.1777 -7882.3423 8581.1777 c-7883.1768 8581.1777 -7884.1919 8581.6992 -7884.1919 8583.1563 c-7884.1919 8583.8613 -7883.4111 8584.8242 -7882.6553 8584.8242 c-7881.9521 8584.8242 -7881.5615 8584.3301 -7881.5615 8583.9648 c-7881.5615 8583.8613 -7881.6665 8583.4434 -7881.6665 8583.3662 c-7881.6665 8582.9229 -7881.3535 8582.9229 -7881.2754 8582.9229 c-7880.9897 8582.9229 -7880.7295 8583.2871 -7880.7295 8583.8613 c-7880.7295 8584.668 -7881.4585 8585.7354 -7882.6294 8585.7354 c-7883.9839 8585.7354 -7885 8584.5381 -7885 8583.1318 c-7885 8580.5527 -7882.8374 8580.293 -7882.2646 8580.293 c-7881.5361 8580.293 -7880.6504 8580.5527 -7880.1294 8580.9697 C-7880.0254 8581.0479 -7879.9209 8581.1006 -7879.8433 8581.1006 c-7879.6606 8581.1006 -7879.5303 8580.8906 -7879.5303 8580.6055 c-7879.5303 8580.1895 -7878.4102 8575.7344 -7874.1382 8575.7344 c-7872.8105 8575.7344 -7870.6753 8576.751 -7870.6753 8579.1992 c-7870.6753 8581.6738 -7872.3154 8582.4814 -7873.3057 8582.4814 c-7874.2959 8582.4814 -7875.4155 8581.5957 -7875.4155 8580.4746 c-7875.4155 8579.1465 -7874.3218 8578.8613 -7873.9038 8578.8613 c-7873.5137 8578.8613 -7873.0713 8578.9902 -7872.9663 8579.2773 C-7872.8623 8579.6152 -7872.7329 8579.7979 -7872.5498 8579.7979 c-7872.4722 8579.7979 -7871.8462 8579.668 -7871.8462 8578.834 c-7871.8462 8576.9072 -7873.9038 8576.6982 -7874.4248 8576.6982 c-7876.3535 8576.6982 -7878.6958 8578.9121 -7878.6958 8581.4395 c-7878.6958 8584.7461 -7875.7534 8586.4922 -7872.7583 8586.4922 c-7869.6064 8586.4922 -7868.4097 8584.6943 -7868.4097 8584.3818 c-7868.4097 8584.1465 -7869.6592 8583.7041 -7869.6592 8583.4961 c-7869.6592 8583.1582 -7868.9561 8582.2988 -7868.2266 8582.2988 c-7866.6631 8582.2988 -7865.96 8581.0742 -7865.96 8580.3457 c-7865.96 8580.2139 -7866.0386 8580.1367 -7866.1943 8580.1367 c-7866.4033 8580.1367 -7867.2622 8580.3184 -7867.4458 8580.3184 c-7868.0967 8580.3184 -7869.2314 8580.2637 -7869.9678 8579.1563 c-7870.5854 8578.2285 -7870.1143 8577.3135 -7870.3994 8576.5615 c-7870.5352 8576.2012 -7871.9375 8574.9473 -7871.9521 8574.7637 C-7871.9727 8574.7852 L-7872.1943 8574.7852 -7873.5566 8574.4688 -7874.7842 8573.5313 C-7874.7783 8573.5957 -7874.7744 8573.6621 -7874.7744 8573.7324 c-7874.7744 8574.8535 -7875.8936 8575.7383 -7876.8838 8575.7383 c-7877.8745 8575.7383 -7879.5142 8574.9297 -7879.5142 8572.457 c-7879.5142 8570.4463 -7878.0762 8569.4023 -7876.8262 8569.0938 C-7876.6875 8567.7676 -7875.6494 8565.9297 -7873.3794 8565.9297 c-7870.9058 8565.9297 -7870.0977 8567.5703 -7870.0977 8568.5615 c-7870.0977 8569.5498 -7870.9834 8570.6689 -7872.1025 8570.6689 c-7872.1934 8570.6689 -7872.2783 8570.666 -7872.3599 8570.6543 C-7871.2471 8572.0166 -7871.0498 8573.7373 -7871.0498 8573.8623 C-7870.6602 8574.584 -7870.1743 8575.1406 v-7869.3174 8576.125 -7869.4995 8577.2031 -7869.2935 8577.8711 c-7868.9185 8579.0986 -7868.4346 8577.793 -7868.4346 8577.6621 c-7868.4346 8577.6357 -7868.5391 8576.9854 -7868.5391 8576.8799 c-7868.5391 8575.918 -7867.9146 8575.6055 -7867.6802 8575.6055 c-7867.1846 8575.6055 -7866.9248 8575.9951 -7866.9248 8576.5166 c-7866.9248 8576.6465 -7866.9502 8576.7754 -7866.9766 8576.9326 C-7867.1328 8577.6104 -7867.6802 8577.8711 -7867.6802 8578.418 c-7867.6802 8579.1738 -7867.0542 8579.4336 -7866.2998 8579.4336 C-7864.8096 8579.9053 -7864.4238 8580.918 v-7864.0386 8581.9307 -7864.4238 8582.585 -7864.3721 8582.8447 c-7863.8774 8585.6846 -7862.3408 8586.4922 -7861.8193 8586.4922 c-7860.8286 8586.4922 -7860.3354 8585.5801 -7860.3354 8584.668 c-7860.3354 8584.0176 -7861.0913 8583.2617 -7861.2471 8583.0273 c-7861.4287 8582.7676 -7862.2065 8581.7959 -7862.4272 8581.6133 c-7862.5088 8581.5449 -7862.9038 8581.3242 -7863.0386 8581.0137 C-7863.3335 8580.626 -7863.3486 8580.4434 -7863.9814 8580.0625 c-7864.5454 8579.7246 -7864.1265 8579.418 Y-7863.8394 8579.1836 -7863.7881 8578.4814 -7863.7881 8577.96 c-7863.7881 8577.0215 -7862.8232 8576.3975 -7862.5889 8576.3975 c-7862.4595 8576.3975 -7862.3545 8576.4746 -7862.3545 8576.6055 C-7862.4858 8577.2041 -7862.4858 8577.3086 v-7862.4858 8577.3613 -7862.6934 8578.8213 -7862.6665 8578.96 C-7862.4551 8579.0381 -7862.0635 8578.541 -7861.6416 8578.1465 C-7860.6958 8577.6504 -7859.5674 8575.3311 -7859.5674 8573.2969 c-7859.5674 8570.0156 -7861.4951 8567.3594 -7864.8042 8567.3594 c-7867.3286 8567.3594 -7869.3618 8569.2861 -7869.3618 8571.2402 c-7869.3618 8571.8906 -7869.0479 8573.793 -7867.3286 8573.793 c-7866.7305 8573.793 -7866.4697 8573.5313 -7866.4697 8573.2705 c-7866.4697 8573.0898 -7866.5742 8572.8799 -7866.7822 8572.6465 C-7867.0166 8572.4111 -7867.1729 8571.9951 -7867.1729 8571.6309 c-7867.1729 8571.3975 -7866.9385 8570.25 -7865.5854 8570.25 c-7864.4648 8570.25 -7863.5791 8571.3701 -7863.5791 8572.3594 c-7863.5791 8573.3496 -7864.3857 8574.9902 -7866.8608 8574.9902 c-7869.3096 8574.9902 -7870.3247 8572.8555 -7870.3247 8571.5264 c-7870.3247 8567.0723 -7865.6631 8566.5254 -7865.4546 8566.5254 c-7865.1685 8566.5254 -7864.96 8566.3945 -7864.96 8566.2129 c-7864.96 8566.1338 -7865.0122 8566.0303 -7865.0898 8565.9258 C-7865.5073 8565.4053 -7865.7666 8564.5186 -7865.7666 8563.791 c-7865.7666 8563.2168 -7865.5073 8561.0557 -7862.9282 8561.0557 c-7861.5215 8561.0557 -7860.3232 8561.8887 -7860.3232 8563.2441 c-7860.3232 8564.416 -7861.3921 8565.1455 -7862.1982 8565.1455 c-7862.7715 8565.1455 -7863.1362 8564.8848 -7863.1362 8564.5977 c-7863.1362 8564.5186 -7863.1362 8564.209 -7862.6934 8564.209 c-7862.6152 8564.209 -7862.1982 8564.3125 -7862.0942 8564.3125 c-7861.7295 8564.3125 -7861.2354 8563.9209 -7861.2354 8563.2168 c-7861.2354 8562.3584 -7862.2246 8561.8633 -7862.9014 8561.8633 c-7864.3599 8561.8633 -7864.8818 8562.8789 -7864.8818 8563.7119 c-7864.8818 8565.041 -7864.5698 8565.25 -7861.6265 8567.3066 c-7860.5439 8568.0615 -7859.6064 8569.085 -7859.0591 8570.4727 C-7859.0591 8576.0381 L-7859.4951 8577.1816 -7860.1538 8578.1494 -7860.8174 8578.9121 C-7862.4351 8580.3477 -7862.5034 8580.7754 -7859.9858 8580.915 cf0 D-7878.3169 8571.9863 m-7878.3169 8572.585 -7878.0562 8572.8477 -7877.7959 8572.8477 c-7877.6138 8572.8477 -7877.4058 8572.7422 -7877.1714 8572.5342 C-7876.9375 8572.2998 -7876.5195 8572.1445 -7876.1553 8572.1445 c-7876.1338 8572.1445 -7876.1055 8572.1465 -7876.0713 8572.1504 C-7876.4287 8571.5898 -7876.6943 8570.9199 -7876.7969 8570.126 C-7877.5313 8570.3594 -7878.3169 8570.8828 -7878.3169 8571.9863 cf-7872.7798 8567.8047 m-7872.7798 8567.7266 -7872.9102 8567.1016 -7873.7432 8567.1016 c-7875.1538 8567.1016 -7875.6431 8568.2012 -7875.8047 8568.998 C-7874.9424 8569.0313 -7874.2354 8569.2441 -7873.6538 8569.5654 C-7873.7002 8569.4072 -7873.7178 8569.2617 -7873.7178 8569.1602 c-7873.7178 8568.7695 -7873.5874 8568.3262 -7873.3008 8568.2227 C-7872.9614 8568.1162 -7872.7798 8567.9873 -7872.7798 8567.8047 cf-7871.9258 8573.875 m-7872.2158 8571.6543 -7873.9785 8569.9551 -7875.7646 8569.9551 c-7875.7935 8569.9551 -7875.8281 8569.957 -7875.8633 8569.958 C-7875.6895 8571.6191 -7873.9912 8573.4824 -7871.9258 8573.875 Cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7834.0845 8587 m-7834.0845 8561.0576 L-7885 8561.0576 L-7885 8587 L-7834.0845 8587 Ln*u0 O0.62 0.04 0.93 0 k-7837.1978 8567.8301 m-7837.3535 8567.6992 -7837.4321 8567.5957 -7837.4321 8567.5176 c-7837.4321 8567.127 -7835.1914 8567.1006 -7834.7222 8567.1006 c-7834.4614 8567.1006 -7834.3325 8566.8662 -7834.3325 8566.6318 c-7834.3325 8566.4229 -7834.4102 8566.2412 -7834.5918 8566.2139 c-7834.8008 8566.1895 -7834.9302 8566.1367 -7834.9302 8566.0059 c-7834.9302 8565.877 -7834.7744 8565.6943 -7834.3838 8565.3809 C-7834.2734 8565.2988 -7834.1738 8565.209 -7834.0845 8565.1104 C-7834.0845 8562.3887 L-7834.6831 8561.6465 -7835.7046 8561.1621 -7836.5449 8561.1621 c-7837.1714 8561.1621 -7837.8745 8561.5273 -7838.1089 8561.8135 C-7838.2383 8561.9434 -7838.3945 8561.9951 -7838.5503 8561.9951 c-7838.7075 8561.9951 -7838.8374 8561.9434 -7838.8896 8561.8398 c-7839.0718 8561.4492 -7839.4102 8561.1895 -7839.8794 8561.1895 c-7840.6353 8561.1895 -7843.5 8563.8711 -7843.5 8564.626 c-7843.5 8564.7568 -7843.3955 8564.8086 -7843.2129 8564.8086 c-7842.9785 8564.8086 -7842.5879 8564.7041 -7842.2241 8564.5215 C-7841.9897 8564.418 -7840.8955 8563.6113 -7840.6079 8563.6113 c-7840.2695 8563.6113 -7840.0352 8564.418 -7839.6978 8564.418 c-7839.4102 8564.418 -7838.3169 8563.4277 -7838.0566 8563.2461 c-7837.8223 8563.0898 -7837.0664 8562.334 -7836.4155 8562.334 c-7835.5039 8562.334 -7834.5918 8562.8281 -7834.5918 8563.8184 c-7834.5918 8564.3398 -7835.3994 8565.877 -7838.2383 8566.3711 c-7838.4995 8566.4229 -7839.8535 8566.3975 -7840.1665 8566.4229 c-7840.4785 8566.4492 -7842.0161 8565.9814 -7842.3535 8565.9023 c-7843.3955 8565.668 -7843.4736 8565.668 -7845.4272 8565.668 c-7845.5576 8565.668 -7845.6362 8565.668 -7845.6362 8565.5898 c-7845.6362 8565.5381 -7845.6094 8565.46 -7845.5313 8565.3564 C-7845.2705 8564.9648 -7845.0361 8564.4434 -7845.0361 8563.8447 c-7845.0361 8562.5166 -7846.3906 8561.1621 -7847.9014 8561.1621 c-7850.8184 8561.1621 -7850.8184 8562.8809 -7850.8184 8563.1152 c-7850.8184 8563.6621 -7850.4795 8564.7822 -7849.2295 8564.7822 c-7848.5264 8564.7822 -7848.2402 8564.4434 -7848.2402 8564.1309 c-7848.2402 8563.8975 -7848.3706 8563.7148 -7848.5527 8563.6367 c-7848.8135 8563.5322 -7848.9175 8563.4023 -7848.9175 8563.2725 c-7848.9175 8563.0117 -7848.5527 8562.7773 -7848.1094 8562.7773 c-7847.3022 8562.7773 -7846.5474 8563.5586 -7846.5474 8564.21 c-7846.5474 8566.293 -7850.8975 8566.8926 -7851.1313 8566.8926 c-7851.4185 8566.8926 -7851.6777 8566.8145 -7851.8862 8566.502 C-7854.1255 8563.3789 -7858.0273 8561.0625 -7859.54 8561.0586 C-7859.54 8561.0586 L-7859.5415 8561.0586 -7859.5415 8561.0586 -7859.5425 8561.0586 c-7859.5435 8561.0586 -7859.5435 8561.0586 -7859.5439 8561.0586 C-7859.5439 8561.0586 L-7861.5498 8561.0615 -7865.1675 8563.6387 -7867.1978 8566.502 c-7867.4063 8566.8145 -7867.6665 8566.8926 -7867.9526 8566.8926 c-7869.3071 8566.8926 -7872.8496 8565.7197 -7872.8496 8563.8447 c-7872.8496 8563.2725 -7872.5103 8562.8281 -7871.8081 8562.8281 c-7871.1558 8562.8281 -7870.7134 8563.0117 -7870.7134 8563.2197 c-7870.7134 8563.3242 -7870.8706 8563.4541 -7871.1558 8563.585 C-7871.3135 8563.6367 -7871.4175 8563.8184 -7871.4175 8564.0273 c-7871.4175 8564.4961 -7871 8565.0957 -7869.8281 8565.0957 c-7868.6558 8565.0957 -7868.1875 8564.3916 -7868.1875 8563.6621 c-7868.1875 8562.334 -7869.3071 8561.1104 -7871.6777 8561.1104 c-7873.6313 8561.1104 -7874.5679 8562.3594 -7874.5679 8563.4277 c-7874.5679 8564.4961 -7873.9697 8564.8613 -7873.6826 8565.2256 c-7873.5786 8565.3564 -7873.5264 8565.4336 -7873.5264 8565.4854 c-7873.5264 8565.5645 -7873.6055 8565.5898 -7873.7607 8565.5898 c-7874.3857 8565.5898 -7877.1729 8566.0586 -7877.7466 8566.0586 c-7878.4751 8566.0586 -7884.4395 8566.0586 -7884.4395 8564.002 c-7884.4395 8563.0361 -7883.6846 8562.543 -7882.7983 8562.543 c-7882.1475 8562.543 -7881.2881 8563.4814 -7880.8457 8563.793 c-7880.1426 8564.3145 -7879.6206 8564.3145 Y-7879.4648 8564.3145 -7879.3862 8564.2607 -7879.3599 8564.1563 C-7879.2305 8563.1416 -7879.1519 8562.9336 -7878.8662 8562.9336 c-7878.3975 8562.9336 -7877.5898 8563.6895 -7877.4072 8564.0801 c-7877.2778 8564.3662 -7876.9902 8564.4961 -7876.7041 8564.4961 c-7876.4185 8564.4961 -7876.0791 8564.3662 -7876.0791 8563.9229 c-7876.0791 8562.9072 -7878.71 8561.1895 -7879.2046 8561.1895 c-7879.6738 8561.1895 -7880.0122 8561.4492 -7880.1943 8561.8398 c-7880.2466 8561.9434 -7880.3774 8561.9951 -7880.5327 8561.9951 c-7880.6895 8561.9951 -7880.8457 8561.9434 -7880.9761 8561.8135 C-7881.21 8561.5273 -7881.9126 8561.1621 -7882.5386 8561.1621 c-7883.3794 8561.1621 -7884.3999 8561.6465 -7885 8562.3887 C-7885 8565.0654 L-7884.9082 8565.1738 -7884.8081 8565.2793 -7884.7002 8565.3809 C-7884.4395 8565.6426 -7884.3359 8565.7979 -7884.3359 8565.9287 c-7884.3359 8566.085 -7884.9346 8566.502 -7884.9346 8566.6318 c-7884.9346 8567.3086 -7884.3882 8567.3086 -7883.1895 8567.3086 c-7883.0063 8567.3086 -7882.1738 8567.2568 -7882.0176 8567.2568 c-7881.7568 8567.2568 -7881.6274 8567.3359 -7881.6274 8567.4648 c-7881.6274 8567.5693 -7881.7305 8567.6992 -7881.8862 8567.8301 c-7882.8442 8568.6016 -7884.2529 8570.0508 -7885 8572.0166 C-7885 8577.583 L-7884.4526 8578.9717 -7883.5166 8579.9941 -7882.4336 8580.75 c-7879.4912 8582.8066 -7879.1782 8583.0137 -7879.1782 8584.3418 c-7879.1782 8585.1758 -7879.6992 8586.1914 -7881.1582 8586.1914 c-7881.8354 8586.1914 -7882.8242 8585.6973 -7882.8242 8584.8369 c-7882.8242 8584.1338 -7882.3306 8583.7441 -7881.9648 8583.7441 c-7881.8618 8583.7441 -7881.4438 8583.8477 -7881.3662 8583.8477 c-7880.9238 8583.8477 -7880.9238 8583.5352 -7880.9238 8583.457 c-7880.9238 8583.1709 -7881.2881 8582.9102 -7881.8618 8582.9102 c-7882.6685 8582.9102 -7883.7358 8583.6377 -7883.7358 8584.8105 c-7883.7358 8586.166 -7882.5386 8586.999 -7881.1318 8586.999 c-7878.5537 8586.999 -7878.2935 8584.8369 -7878.2935 8584.2637 c-7878.2935 8583.5352 -7878.5537 8582.6494 -7878.9702 8582.1279 C-7879.0479 8582.0234 -7879.1006 8581.9199 -7879.1006 8581.8428 c-7879.1006 8581.6602 -7878.8911 8581.5293 -7878.6055 8581.5293 c-7878.3975 8581.5293 -7873.7344 8580.9824 -7873.7344 8576.5293 c-7873.7344 8575.2012 -7874.7515 8573.0654 -7877.1992 8573.0654 c-7879.6738 8573.0654 -7880.4814 8574.7061 -7880.4814 8575.6953 c-7880.4814 8576.6855 -7879.5962 8577.8047 -7878.4751 8577.8047 c-7877.1206 8577.8047 -7876.8862 8576.6592 -7876.8862 8576.4248 c-7876.8862 8576.0615 -7877.0435 8575.6426 -7877.2778 8575.4092 C-7877.4858 8575.1738 -7877.5898 8574.9658 -7877.5898 8574.7832 c-7877.5898 8574.5215 -7877.3286 8574.2637 -7876.7305 8574.2637 c-7875.0122 8574.2637 -7874.6992 8576.166 -7874.6992 8576.8145 c-7874.6992 8578.7695 -7876.7305 8580.6953 -7879.2568 8580.6953 c-7882.5649 8580.6953 -7884.4922 8578.04 -7884.4922 8574.7578 c-7884.4922 8572.4668 -7883.0586 8569.8096 -7882.0698 8569.8096 c-7881.6519 8569.8096 -7881.5742 8570.5898 -7881.5742 8570.7471 c-7881.5742 8570.8506 -7881.7046 8571.4502 Y-7881.7046 8571.5801 -7881.6006 8571.6582 -7881.4702 8571.6582 c-7881.2358 8571.6582 -7880.2729 8571.0332 -7880.2729 8570.0957 c-7880.2729 8569.5752 -7880.2207 8568.8711 -7879.9336 8568.6367 c-7879.7524 8568.4814 -7878.5801 8567.96 -7878.3457 8567.96 c-7878.2144 8567.96 -7878.1367 8568.0381 -7878.1367 8568.1953 c-7878.1367 8568.4023 -7878.3193 8569.3145 -7878.3193 8569.4961 c-7878.3193 8570.877 -7877.5122 8571.8926 -7876.0527 8571.8926 c-7875.8975 8571.8926 -7875.3242 8571.8672 -7875.3242 8571.6328 c-7875.3242 8571.502 -7875.8711 8571.1367 -7875.8711 8571.0078 c-7875.8711 8570.877 -7875.7935 8570.7979 -7875.6626 8570.7979 c-7875.6367 8570.7979 -7874.9858 8570.9023 -7874.8809 8570.9023 c-7873.9175 8570.9023 -7873.6055 8570.2783 -7873.6055 8570.0439 c-7873.6055 8569.5488 -7873.9951 8569.2891 -7874.5166 8569.2891 c-7874.6465 8569.2891 -7874.7778 8569.3145 -7874.9336 8569.3408 C-7875.6104 8569.4961 -7875.8711 8570.0439 -7876.4185 8570.0439 c-7877.1729 8570.0439 -7877.4336 8569.0537 -7877.4336 8568.2988 c-7877.4336 8567.3857 -7875.8184 8566.8398 -7874.0991 8566.8398 c-7872.1465 8566.8398 -7868.5786 8568.2471 -7868.5786 8568.9756 C-7869.6982 8572.2578 -7869.8545 8572.8828 v-7869.9063 8573.1162 -7869.9839 8573.2207 -7870.0889 8573.2207 c-7870.4282 8573.2207 -7871.0527 8571.5273 -7871.3394 8571.5273 c-7871.7031 8571.5273 -7871.9121 8572.5703 -7871.9121 8573.7158 c-7871.9121 8577.2314 -7869.6465 8582.3369 -7869.1504 8583.0664 c-7869.0474 8583.2227 -7868.9946 8583.3535 -7868.9946 8583.4824 c-7868.9946 8583.6914 -7869.1504 8583.8477 -7869.3857 8583.8477 c-7869.4639 8583.8477 -7872.8496 8582.5967 -7872.8496 8581.8682 c-7872.8496 8581.7119 -7872.7969 8581.582 -7872.7969 8581.4512 c-7872.7969 8581.0352 -7873.0313 8580.8535 -7873.5786 8580.8535 c-7874.3857 8580.8535 -7874.4385 8581.2168 -7874.4385 8581.4258 c-7874.4385 8581.6348 -7874.3857 8581.8945 -7874.3857 8582.4414 c-7874.3857 8582.6758 -7874.4639 8583.4053 -7874.6729 8583.457 c-7875.4814 8583.6377 -7876.2617 8584.1602 -7876.2617 8584.5244 c-7876.2617 8585.0723 -7875.5054 8586.5039 -7875.1934 8586.5039 c-7874.7246 8586.5039 -7873.7344 8584.2383 -7873.3706 8584.2383 c-7873.1626 8584.2383 -7872.4849 8586.6348 -7872.0425 8586.6348 c-7871.8594 8586.6348 -7871.6514 8586.3994 -7871.6514 8586.0352 c-7871.6514 8585.4629 -7872.1465 8584.6289 -7872.1465 8584.2383 c-7872.1465 8584.0557 -7872.0688 8583.9512 -7871.9121 8583.9512 c-7871.5728 8583.9512 -7870.2715 8584.6025 -7868.5786 8585.4629 c-7867.1978 8586.1377 -7866.1816 8586.999 -7864.4102 8586.999 c-7861.6504 8586.999 -7859.6455 8585.125 -7859.6455 8581.6602 c-7859.6455 8580.5918 -7859.8262 8579.4463 -7860.1138 8578.2744 c-7860.2954 8577.5439 -7861.5454 8574.3672 -7861.5454 8573.6904 c-7861.5454 8573.4033 -7861.4414 8573.2734 -7861.2334 8573.2734 c-7861.0513 8573.2734 -7860.2974 8573.5586 -7859.5439 8573.5596 C-7859.5439 8573.5596 L-7859.5435 8573.5596 -7859.5435 8573.5596 -7859.5425 8573.5596 c-7859.5415 8573.5596 -7859.5415 8573.5596 -7859.54 8573.5596 C-7859.54 8573.5596 L-7858.7866 8573.5586 -7858.0337 8573.2734 -7857.8506 8573.2734 c-7857.6426 8573.2734 -7857.5386 8573.4033 -7857.5386 8573.6904 c-7857.5386 8574.3672 -7858.7881 8577.5439 -7858.9702 8578.2744 c-7859.2568 8579.4463 -7859.4395 8580.5918 -7859.4395 8581.6602 c-7859.4395 8585.125 -7857.4336 8586.999 -7854.6729 8586.999 c-7852.9023 8586.999 -7851.8862 8586.1377 -7850.5054 8585.4629 c-7848.8135 8584.6025 -7847.5103 8583.9512 -7847.1719 8583.9512 c-7847.0161 8583.9512 -7846.9375 8584.0557 -7846.9375 8584.2383 c-7846.9375 8584.6289 -7847.4326 8585.4629 -7847.4326 8586.0352 c-7847.4326 8586.3994 -7847.2246 8586.6348 -7847.0425 8586.6348 c-7846.5474 8586.6348 -7845.8706 8583.8213 -7845.6362 8583.8213 c-7845.3755 8583.8213 -7845.0098 8585.0449 -7844.7231 8586.0879 c-7844.5938 8586.582 -7844.2554 8586.7637 -7843.9688 8586.7637 c-7843.6035 8586.7637 -7843.2393 8586.5039 -7843.2393 8586.1377 c-7843.2393 8586.0098 -7843.2915 8585.8535 -7843.3955 8585.6973 c-7845.2705 8582.832 -7844.8018 8581.4785 -7845.0625 8580.9297 c-7845.1665 8580.7227 -7845.4785 8580.6182 -7845.7656 8580.6182 c-7846.2344 8580.6182 -7846.2344 8580.75 -7846.2344 8581.8682 c-7846.2344 8582.5967 -7849.6201 8583.8477 -7849.6982 8583.8477 c-7849.9326 8583.8477 -7850.0889 8583.6914 -7850.0889 8583.4824 c-7850.0889 8583.3535 -7850.0366 8583.2227 -7849.9326 8583.0664 c-7849.4375 8582.3369 -7847.1719 8577.2314 -7847.1719 8573.7158 c-7847.1719 8572.5703 -7847.3809 8571.5273 -7847.7446 8571.5273 c-7848.0845 8571.5273 -7848.6313 8573.6641 -7849.0215 8573.6641 c-7849.2295 8573.6641 -7850.0889 8570.0693 -7850.3755 8569.4189 c-7850.4546 8569.2354 -7850.5054 8569.0801 -7850.5054 8568.9756 c-7850.5054 8568.2471 -7846.9375 8566.8398 -7844.9839 8566.8398 c-7843.2656 8566.8398 -7841.6504 8567.3857 -7841.6504 8568.2988 c-7841.6504 8569.0537 -7841.9111 8569.6797 -7842.6665 8569.6797 c-7843.2129 8569.6797 -7843.4736 8569.1318 -7844.1504 8568.9756 C-7844.3066 8568.9502 -7844.4375 8568.9238 -7844.5674 8568.9238 c-7845.0879 8568.9238 -7845.4785 8569.1846 -7845.4785 8569.6797 c-7845.4785 8569.9141 -7845.1665 8570.5391 -7844.2031 8570.5391 c-7844.0986 8570.5391 -7843.4473 8570.4336 -7843.4214 8570.4336 c-7843.2915 8570.4336 -7843.2129 8570.5127 -7843.2129 8570.6426 c-7843.2129 8570.7734 -7843.7598 8571.1367 -7843.7598 8571.2666 c-7843.7598 8571.502 -7843.1875 8571.5273 -7843.0313 8571.5273 c-7842.0674 8571.5273 -7840.7646 8570.9023 -7840.7646 8569.4453 c-7840.7646 8569.2617 -7840.9473 8568.4023 -7840.9473 8568.1953 c-7840.9473 8568.0381 -7840.8687 8567.96 -7840.7393 8567.96 c-7840.0098 8567.96 -7838.7856 8568.6641 -7838.7856 8570.2266 c-7838.7856 8570.9551 -7837.9258 8571.6582 -7837.5879 8571.6582 c-7837.3794 8571.6582 -7836.9375 8570.4082 -7836.7026 8570.4082 c-7836.3887 8570.4082 -7834.5918 8571.6064 -7834.5918 8574.7578 c-7834.5918 8577.7529 -7836.3374 8580.6953 -7839.6455 8580.6953 c-7842.1719 8580.6953 -7844.3848 8578.3535 -7844.3848 8576.4248 c-7844.3848 8575.9033 -7844.1768 8573.8457 -7842.25 8573.8457 c-7841.4165 8573.8457 -7841.2866 8574.4717 -7841.2866 8574.5488 c-7841.2866 8574.7324 -7841.4688 8574.8623 -7841.8066 8574.9658 C-7842.0938 8575.0703 -7842.2241 8575.5137 -7842.2241 8575.9033 c-7842.2241 8576.3193 -7841.9375 8577.4141 -7840.6079 8577.4141 c-7839.4878 8577.4141 -7838.6035 8576.2949 -7838.6035 8575.3047 c-7838.6035 8574.3145 -7839.4102 8572.6738 -7841.8848 8572.6738 c-7844.3335 8572.6738 -7845.3486 8574.8105 -7845.3486 8576.1377 c-7845.3486 8580.4102 -7840.8955 8581.5293 -7840.4785 8581.5293 c-7840.1914 8581.5293 -7839.9834 8581.6602 -7839.9834 8581.8428 c-7839.9834 8581.9199 -7840.0352 8582.0234 -7840.1138 8582.1279 C-7840.5303 8582.6494 -7840.7915 8583.5352 -7840.7915 8584.2637 c-7840.7915 8584.8369 -7840.5303 8586.999 -7837.9521 8586.999 c-7836.5449 8586.999 -7835.3481 8585.9824 -7835.3481 8584.6289 c-7835.3481 8583.457 -7836.4155 8582.7285 -7837.2222 8582.7285 c-7837.7959 8582.7285 -7838.1602 8582.9873 -7838.1602 8583.2754 c-7838.1602 8583.3535 -7838.1602 8583.666 -7837.7178 8583.666 c-7837.6401 8583.666 -7837.2222 8583.5615 -7837.1182 8583.5615 c-7836.7534 8583.5615 -7836.2593 8583.9512 -7836.2593 8584.6543 c-7836.2593 8585.4102 -7837.2222 8586.1914 -7837.9258 8586.1914 c-7839.3848 8586.1914 -7839.9058 8585.1758 -7839.9058 8584.3418 c-7839.9058 8583.0137 -7839.5928 8582.8066 -7836.6494 8580.75 c-7835.5674 8579.9941 -7834.6313 8578.9717 -7834.0845 8577.583 C-7834.0845 8572.0166 L-7834.8311 8570.0508 -7836.2402 8568.6016 -7837.1978 8567.8301 cf1 D-7860.6338 8581.4512 m-7860.6338 8584.3164 -7862.1978 8585.75 -7863.1602 8585.75 c-7863.7075 8585.75 -7865.6606 8584.8887 -7865.6606 8582.5449 c-7865.6606 8582.0762 -7865.6094 8581.582 -7865.5835 8581.166 c-7865.5313 8580.4102 -7865.2441 8580.0186 -7864.75 8579.6016 c-7864.4375 8579.3418 -7863.6289 8578.6377 -7863.6289 8577.7529 c-7863.6289 8577.0488 -7864.3066 8575.9033 -7865.6094 8575.9033 c-7866.2085 8575.9033 -7867.6665 8576.166 -7867.6665 8579.3164 c-7867.6665 8581.9727 -7866.7295 8583.7441 -7866.5718 8583.9785 C-7866.4946 8584.1338 -7866.4424 8584.2383 -7866.4424 8584.3164 c-7866.4424 8584.3945 -7866.4946 8584.4463 -7866.5474 8584.4463 c-7867.4849 8584.4463 -7868.9165 8581.1377 -7868.9165 8578.1689 c-7868.9165 8575.9824 -7867.3799 8570.9551 -7865.9736 8570.9551 c-7864.4897 8570.9551 -7860.6338 8576.6074 -7860.6338 8581.4512 cf-7859.54 8571.0586 m-7859.54 8571.0586 L-7859.5415 8571.0586 -7859.5415 8571.0586 -7859.5425 8571.0586 c-7859.5435 8571.0586 -7859.5435 8571.0586 -7859.5439 8571.0586 C-7859.5439 8571.0586 L-7860.5313 8571.0615 -7861.3374 8571.3984 -7861.8584 8571.9453 c-7861.9634 8572.0488 -7862.0928 8572.127 -7862.2222 8572.127 c-7862.6401 8572.127 -7864.8535 8570.4082 -7864.8535 8569.0801 c-7864.8535 8567.6738 -7861.6504 8565.7725 -7859.54 8565.2773 C-7859.54 8565.252 L-7856.8594 8566.1113 -7854.2305 8567.752 -7854.2305 8569.0801 c-7854.2305 8570.4082 -7856.4438 8572.127 -7856.8618 8572.127 c-7856.9912 8572.127 -7857.1206 8572.0488 -7857.2256 8571.9453 c-7857.7466 8571.3984 -7858.5518 8571.0615 -7859.54 8571.0586 Cf-7850.1685 8578.1689 m-7850.1685 8581.1377 -7851.6001 8584.4463 -7852.5366 8584.4463 c-7852.5898 8584.4463 -7852.6416 8584.3945 -7852.6416 8584.3164 c-7852.6416 8584.2383 -7852.5898 8584.1338 -7852.5122 8583.9785 C-7852.3555 8583.7441 -7851.4185 8581.9727 -7851.4185 8579.3164 c-7851.4185 8577.7793 -7851.8862 8575.8506 -7853.3711 8575.8506 c-7853.9185 8575.8506 -7855.5854 8576.7109 -7855.5854 8577.5967 c-7855.5854 8577.7793 -7855.4814 8578.5869 -7854.6206 8579.2637 c-7854.1265 8579.6543 -7853.7354 8580.2529 -7853.5015 8580.9824 C-7853.3975 8581.3994 -7853.3184 8581.8945 -7853.3184 8582.3887 c-7853.3184 8583.1973 -7853.6577 8585.7754 -7855.6113 8585.7754 c-7856.6782 8585.7754 -7858.4497 8584.6289 -7858.4497 8581.4512 c-7858.4497 8576.6074 -7854.5942 8570.9551 -7853.1104 8570.9551 c-7851.7041 8570.9551 -7850.1685 8575.9824 -7850.1685 8578.1689 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 3 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe Calligr) -(aphic Brush Tool/ 3 pt. Round/ Adobe Calligraphic Brush Tool/ ) -(7 pt. Round/ Adobe ArtOnPath Brush Tool/ Pencil - Thin/ Adobe ) -(ArtOnPath Brush Tool/ Charcoal/ Adobe ArtOnPath Brush Tool/ Ba) -(nner/ Adobe PatternOnPath Brush Tool/ Ornamental Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Flat)(1 3 3 9 9 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 5 0.976471 0.741176 0.372549 / ) -( 1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Pencil - Thin)(1 / Unnamed 2/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Ornamental Border)(1 / Unnamed Brush Pat 7/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 2/ / / 5 0.423529 0.72549 0.313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)PcBb2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 1)PcBb0 0 0 0 Bh2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 1)Pc0.15 0.91 1 0.04 k(C=15 M=91 Y=100 K=4)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Auuu0 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR227.4517 372.6113 m227.5854 372.6113 L233.5254 393.8818 L234.1934 396.2583 235.5962 398.6558 238.1982 398.0581 c241.6323 397.2695 241.6323 395.9302 241.6323 394.7734 c241.6323 394.0029 241.3652 393.0371 240.897 391.8164 c231.1895 360.0801 L228.8535 353.6563 226.1831 350.3135 220.042 350.3135 c215.7036 350.3135 213.9009 352.3672 213.9009 354.6191 c213.9009 357.124 216.8008 358.3838 219.4033 358.3838 c220.4053 358.3838 L221.6733 358.3838 223.2383 359.0586 223.9727 361.9512 c210.5474 389.334 L209.7461 391.583 209.3457 392.6104 209.3457 393.7021 c209.3457 396.2729 209.7144 396.8804 212.5439 397.9517 c214.5186 398.6978 216.9507 396.5376 217.5513 394.415 C227.4517 372.6113 lfU*u304.7852 393.6465 m304.7852 396.6143 306.0776 398.1958 308.8486 398.1958 c311.4971 398.1958 312.9141 396.6143 312.9141 393.6465 c312.9141 392.1299 L313.0352 392.1299 L314.5156 396.2153 318.1475 398.1958 322.5195 398.1958 c330.0303 398.1958 336.6191 392.3252 336.6191 379.8652 c336.6191 370.6328 332.2471 361.9941 322.7646 361.9941 c318.6396 361.9941 315.5596 363.7783 313.9004 366.875 c313.7764 366.875 L313.7764 354.0195 L313.7764 350.8516 311.9902 349.2041 309.2803 349.2041 c306.5713 349.2041 304.7852 350.8516 304.7852 354.0195 C304.7852 393.6465 lf1 D324.4854 391.5615 m319.0537 391.5615 317.0098 385.9883 317.0098 379.8975 c317.0098 374.3975 318.7988 367.9424 324.4854 368.0166 c330.4229 368.0166 331.8936 374.9092 331.8936 379.8975 c331.8936 386.208 329.4648 391.415 324.4854 391.5615 cf*U0 D285.4795 405.0967 m285.4795 408.3164 287.251 409.9922 289.937 409.9922 c292.623 409.9922 294.394 408.3164 294.394 405.0967 c294.394 364.873 L294.394 361.6553 292.623 359.9785 289.937 359.9785 c287.251 359.9785 285.4795 361.6553 285.4795 364.873 C285.4795 405.0967 lf*u254.4678 376.918 m254.4678 371.6953 257.3354 367.8975 262.2114 367.8975 c268.522 367.8975 268.522 372.7822 271.9072 372.7822 c273.9155 372.7822 275.3491 370.7471 275.3491 368.9141 c275.3491 362.9434 267.2607 360.1621 262.2114 360.1621 c250.5093 360.1621 246.0923 369.5244 246.0923 378.1387 c246.0923 389.6719 252 397.4043 261.9248 397.4043 c271.5645 397.4043 277.0708 389.3311 277.0708 381.1914 c277.0708 377.8018 276.2104 376.918 273.3989 376.918 C254.4678 376.918 lf1 D268.2612 382.2598 m267.7705 387.3174 264.6909 391.0205 260.6919 391.0205 c256.1973 391.0205 253.4897 387.6221 252.5044 382.2598 C268.2612 382.2598 lf*UUuu*u0 D0.15 0.91 1 0.04 k405.6475 428.3228 m405.3193 427.5342 404.8652 426.8564 404.2861 426.2861 c403.708 425.7183 403.0322 425.2656 402.2607 424.9336 c401.4883 424.6016 400.6592 424.436 399.7725 424.436 c398.8848 424.436 398.0557 424.6016 397.2842 424.9336 c396.5117 425.2656 395.8369 425.7183 395.2578 426.2861 c394.6787 426.8564 394.2207 427.5342 393.8818 428.3228 c393.5449 429.1104 393.376 429.959 393.376 430.8711 c393.376 431.7622 393.5449 432.5981 393.8818 433.3765 c394.2207 434.1538 394.6787 434.8281 395.2578 435.3975 c395.8369 435.9688 396.5117 436.4194 397.2842 436.7505 c398.0557 437.084 398.8848 437.2495 399.7725 437.2495 c400.6592 437.2495 401.4883 437.084 402.2607 436.7505 c403.0322 436.4194 403.708 435.9688 404.2861 435.3975 c404.8652 434.8281 405.3193 434.1538 405.6475 433.3765 c405.9746 432.5981 406.1387 431.7622 406.1387 430.8711 c406.1387 429.959 405.9746 429.1104 405.6475 428.3228 cf1 D404.707 433.0361 m404.4268 433.7178 404.0508 434.3115 403.5771 434.8154 c403.1045 435.3169 402.5459 435.7168 401.9004 436.0093 c401.2539 436.3052 400.5537 436.4512 399.8008 436.4512 c399.0488 436.4512 398.3496 436.3052 397.7031 436.0093 c397.0557 435.7168 396.4922 435.3169 396.0107 434.8154 c395.5273 434.3115 395.1465 433.7178 394.8662 433.0361 c394.5869 432.3506 394.4473 431.6309 394.4473 430.8711 c394.4473 430.0928 394.5869 429.3623 394.8662 428.6772 c395.1465 427.9951 395.5273 427.3965 396.0107 426.8843 c396.4922 426.3721 397.0625 425.9683 397.7178 425.6738 c398.373 425.3799 399.0781 425.2319 399.832 425.2319 c400.5645 425.2319 401.2539 425.3799 401.9004 425.6738 c402.5459 425.9683 403.1045 426.3677 403.5771 426.8716 c404.0508 427.373 404.4268 427.9658 404.707 428.6509 c404.9873 429.3325 405.126 430.0649 405.126 430.8433 c405.126 431.6201 404.9873 432.3506 404.707 433.0361 cf0 D401.5967 427.1406 m401.4033 427.3862 401.2197 427.9951 401.0459 428.9639 c400.9492 429.4561 400.7705 429.8022 400.5098 430.0034 c400.249 430.2021 399.8691 430.3013 399.3662 430.3013 C398.498 430.3013 L398.498 427.1406 L397.5723 427.1406 L397.5723 434.2881 l397.8994 434.3267 398.2051 434.3628 398.4844 434.4028 c398.7646 434.439 399.0869 434.458 399.4541 434.458 c399.9551 434.458 400.3848 434.4053 400.7432 434.3032 c401.0986 434.1978 401.3838 434.0688 401.5967 433.917 c402.0391 433.5947 402.2607 433.1104 402.2607 432.4644 c402.2607 431.9717 402.1211 431.5825 401.8418 431.2969 c401.5625 431.0132 401.2285 430.814 400.8438 430.6997 C400.8438 430.6426 l401.499 430.5303 401.9141 429.9502 402.0869 428.9058 c402.1836 428.355 402.2705 427.9512 402.3477 427.6968 c402.4258 427.439 402.502 427.2549 402.5791 427.1406 C401.5967 427.1406 lf1 D400.8584 433.2773 m400.5771 433.5713 400.0703 433.7178 399.3389 433.7178 c399.1455 433.7178 398.9795 433.7139 398.8467 433.7026 c398.7109 433.6943 398.5957 433.6797 398.498 433.6626 C398.498 430.9834 L399.3965 430.9834 l399.8984 430.9834 400.3379 431.085 400.7139 431.2837 c401.0889 431.4829 401.2764 431.8301 401.2764 432.3232 c401.2764 432.6641 401.1367 432.9834 400.8584 433.2773 cf*UU0 D372.7559 400.8491 m371.5664 399.6504 372.5723 397.4688 y381.5244 382.5205 l382.9941 380.5498 384.2676 380.5498 v385.5469 380.5498 386.8105 381.6006 y393.8877 391.7168 l394.6006 392.9932 394.6172 394.1113 v394.6426 395.7007 392.2461 396.1367 y375.4902 401.5176 l373.8486 401.9531 372.7559 400.8491 vf371.9063 408.3838 m372.7637 406.9302 375.1289 407.3535 y391.8467 412.2397 l394.125 413.1665 394.4502 414.4019 v394.7695 415.6372 394.0742 417.1284 y386.085 426.5391 l385.3926 427.729 383.9561 427.8486 v382.3721 427.9834 381.3975 426.0664 y371.9512 411.2017 l371.1162 409.7212 371.9063 408.3838 vf364.0078 414.1792 m365.9766 414.6641 366.2891 417.5239 y366.1553 441.3252 l365.8584 444.2612 364.5391 445.0571 v362.4697 446.3125 361.8564 445.6572 361.2637 445.5693 c347.3838 440.4121 l346.0244 439.9624 345.3164 438.8281 v344.3057 437.2212 346.3438 434.8682 y360.7705 415.2036 l362.1943 413.7314 364.0078 414.1792 vf360.5801 404.5464 m360.6299 406.3828 358.376 407.4854 y343.457 415.0225 l341.2461 415.9341 340.1729 415.2988 v339.3506 414.813 338.6221 413.9336 338.5508 413.1563 c337.5791 401.1953 l337.4336 399.1226 337.9707 398.1797 v338.7314 396.8423 341.2344 397.7729 y358.6514 401.6226 l359.3281 402.0776 360.5146 402.1196 360.5801 404.5464 cf364.9111 398.0918 m363.416 398.8594 361.627 397.2695 y349.9648 384.4307 l348.5098 382.4678 348.8799 381.2617 v349.2285 380.1318 349.8057 379.5703 350.6221 379.1748 c362.334 375.4775 l363.7539 375.1826 364.8291 375.4941 v366.3555 375.9365 366.0742 378.3262 y366.3389 395.7095 l366.2793 397.3838 364.9111 398.0918 vfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF